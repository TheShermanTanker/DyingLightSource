!MorphTargets()
//index of target in speech, name of morph target
!MorphTargetDef( n, s )
//index of target in speech, name of mimic that will be use
!MimicDef( n, s )
//name of mimic that will be apply before speech mimic
!MimicClearDef(s)

!Phonemes()
//index of phoneme, name of phoneme
!PhonemeDef( n, s )
!Map()
//index of phoneme, index of morph target, morph taret delta
!PhonemeData( n, n, f )

        
!PhonemesMap()
// new phonemes section
!Phoneme( n, s, f, s)

MorphTargets()
{ 
  MorphTargetDef( 0, "Eat" )
  MimicDef(0,"Eat")
//  MimicDef(0,"death1")

  MorphTargetDef( 1, "Earth" )
  MimicDef(1,"Earth")
//  MimicDef(1,"death2")

  MorphTargetDef( 2, "If" )
  MimicDef(2,"If")
//  MimicDef(2,"ZOMBIE_01")
 
  MorphTargetDef( 3, "Ox" )
  MimicDef(3,"Ox")
//  MimicDef(3,"ZOMBIE_02")

  MorphTargetDef( 4, "Oat" )
  MimicDef(4,"Oat")
//  MimicDef(4,"ZOMBIE_03")

  MorphTargetDef( 5, "Wet" )
  MimicDef(5,"Wet")
//  MimicDef(5,"ZOMBIE_04")

  MorphTargetDef( 6, "Size" )
  MimicDef(6,"Size")
//  MimicDef(6,"ZOMBIE_05")

  MorphTargetDef( 7, "Church" )
  MimicDef(7,"Church")
//  MimicDef(7,"ZOMBIE_06")

  MorphTargetDef( 8, "Fave" )
  MimicDef(8,"Fave")
//  MimicDef(8,"ZOMBIE_07")

  MorphTargetDef( 9, "Though" )
  MimicDef(9,"Though")
//  MimicDef(9,"ZOMBIE_08")

  MorphTargetDef( 10, "Told" )
  MimicDef(10,"Told")
//  MimicDef(10,"ZOMBIE_09")

  MorphTargetDef( 11, "Bump" )
  MimicDef(11,"Bump")

  MorphTargetDef( 12, "New" )
  MimicDef(12,"New")

  MorphTargetDef( 13, "Roar" )
  MimicDef(13,"Roar")

  MorphTargetDef( 14, "Cage" )
  MimicDef(14,"Cage")

  
}

Phonemes()
{
  PhonemeDef( 0, "Iy" )
  PhonemeDef( 1, "Ih" )
  PhonemeDef( 2, "Eh" )
  PhonemeDef( 3, "Ey" )
  PhonemeDef( 4, "Ae" )
  PhonemeDef( 5, "Aa" )
  PhonemeDef( 6, "Aw" )
  PhonemeDef( 7, "Ay" )
  PhonemeDef( 8, "Ah" )
  PhonemeDef( 9, "Ao" )
  PhonemeDef( 10, "Oy" )
  PhonemeDef( 11, "Ow" )
  PhonemeDef( 12, "Uh" )
  PhonemeDef( 13, "Uw" )
  PhonemeDef( 14, "Er" )
  PhonemeDef( 15, "Ax" )
  PhonemeDef( 16, "S" )
  PhonemeDef( 17, "Sh" )
  PhonemeDef( 18, "Z" )
  PhonemeDef( 19, "Zh" )
  PhonemeDef( 20, "F" )
  PhonemeDef( 21, "Th" )
  PhonemeDef( 22, "V" )
  PhonemeDef( 23, "Dh" )
  PhonemeDef( 24, "M" )
  PhonemeDef( 25, "N" )
  PhonemeDef( 26, "Ng" )
  PhonemeDef( 27, "L" )
  PhonemeDef( 28, "R" )
  PhonemeDef( 29, "W" )
  PhonemeDef( 30, "Y" )
  PhonemeDef( 31, "Hh" )
  PhonemeDef( 32, "B" )
  PhonemeDef( 33, "D" )
  PhonemeDef( 34, "Jh" )
  PhonemeDef( 35, "G" )
  PhonemeDef( 36, "P" )
  PhonemeDef( 37, "T" )
  PhonemeDef( 38, "K" )
  PhonemeDef( 39, "Ch" )
  PhonemeDef( 40, "Sil" )
  PhonemeDef( 41, "ShortSil" )
  PhonemeDef( 42, "Flap" )
}

Map()
{
  PhonemeData( 0, 0, 0.85 )
  PhonemeData( 1, 2, 0.85 )
  PhonemeData( 2, 2, 0.85 )
  PhonemeData( 3, 2, 0.85 )
  PhonemeData( 4, 2, 0.85 )
  PhonemeData( 5, 3, 0.85 )
  PhonemeData( 6, 2, 0.85 )
  PhonemeData( 7, 2, 0.85 )
  PhonemeData( 8, 2, 0.85 )
  PhonemeData( 9, 3, 0.85 )
  PhonemeData( 10, 4, 0.85 )
  PhonemeData( 11, 4, 0.85 )
  PhonemeData( 12, 4, 0.85 )
  PhonemeData( 13, 4, 0.85 )
  PhonemeData( 14, 1, 0.85 )
  PhonemeData( 15, 2, 0.85 )
  PhonemeData( 16, 6, 0.85 )
  PhonemeData( 17, 7, 0.85 )
  PhonemeData( 18, 6, 0.85 )
  PhonemeData( 19, 7, 0.85 )
  PhonemeData( 20, 8, 0.70 )
  PhonemeData( 21, 9, 0.85 )
  PhonemeData( 22, 8, 0.70 )
  PhonemeData( 23, 9, 0.85 )
  PhonemeData( 24, 11, 0.85 )
  PhonemeData( 25, 12, 0.85 )
  PhonemeData( 26, 12, 0.85 )
  PhonemeData( 27, 10, 0.85 )
  PhonemeData( 28, 13, 0.85 )
  PhonemeData( 29, 5, 0.85 )
  PhonemeData( 30, 5, 0.85 )
  PhonemeData( 31, 2, 0.85 )
  PhonemeData( 32, 11, 0.85 )
  PhonemeData( 33, 10, 0.85 )
  PhonemeData( 34, 7, 0.85 )
  PhonemeData( 35, 14, 0.20 )
  PhonemeData( 36, 11, 0.85 )
  PhonemeData( 37, 10, 0.85 )
  PhonemeData( 38, 14, 0.20 )
  PhonemeData( 39, 7, 0.85 )
  PhonemeData( 41, 2, 0.20 )
  PhonemeData( 42, 10, 0.50 )
}

PhonemesMap()
{
  // Phonemes(id:uint, name:string, duration:float, mimic_override:string)
  Phoneme(  0, "Sil", 0.85, "")
  Phoneme(  1, "ShortSil", 0.20, "")
  Phoneme(  2, "P", 0.85, "")
  Phoneme(  3, "B", 0.85, "")
  Phoneme(  4, "T", 0.85, "")
  Phoneme(  5, "D", 0.85, "")
  Phoneme(  6, "K", 0.20, "")
  Phoneme(  7, "G", 0.20, "")
  Phoneme(  8, "M", 0.85, "")
  Phoneme(  9, "N", 0.85, "")
  Phoneme( 10, "Ng", 0.85, "")
  Phoneme( 11, "Ra", 0.85, "")
  Phoneme( 12, "Ru", 0.85, "")
  Phoneme( 13, "Flap", 0.5, "")
  Phoneme( 14, "Ph", 0.85, "")
  Phoneme( 15, "F", 0.70, "")
  Phoneme( 16, "V", 0.7, "")
  Phoneme( 17, "Th", 0.85, "")
  Phoneme( 18, "Dh", 0.85, "")
  Phoneme( 19, "S", 0.85, "")
  Phoneme( 20, "Z", 0.85, "")
  Phoneme( 21, "Sh", 0.85, "")
  Phoneme( 22, "Zh", 0.85, "")
  Phoneme( 23, "CX", 0.85, "") 
  Phoneme( 24, "X", 0.85, "") 
  Phoneme( 25, "Gh", 0.85, "") 
  Phoneme( 26, "Hh", 0.85, "")
  Phoneme( 27, "R", 0.85, "")
  Phoneme( 28, "Y", 0.85, "")
  Phoneme( 29, "L", 0.85, "")
  Phoneme( 30, "W", 0.85, "")
  Phoneme( 31, "H", 0.85, "")
  Phoneme( 32, "Ts", 0.85, "")
  Phoneme( 33, "Ch", 0.85, "")
  Phoneme( 34, "Jh", 0.85, "")
  Phoneme( 35, "Iy", 0.85, "")
  Phoneme( 36, "E", 0.85, "")
  Phoneme( 37, "En", 0.85, "")
  Phoneme( 38, "Eh", 0.85, "")
  Phoneme( 39, "A", 0.85, "")
  Phoneme( 40, "Aa", 0.85, "")
  Phoneme( 41, "Aan", 0.85, "")
  Phoneme( 42, "Ao", 0.85, "")
  Phoneme( 43, "Aon", 0.85, "")
  Phoneme( 44, "O", 0.85, "")
  Phoneme( 45, "On", 0.85, "")
  Phoneme( 46, "Uw", 0.85, "")
  Phoneme( 47, "Uy", 0.85, "")
  Phoneme( 48, "Eu", 0.85, "")
  Phoneme( 49, "Oe", 0.85, "")
  Phoneme( 50, "Oen", 0.85, "")
  Phoneme( 51, "Ah", 0.85, "")
  Phoneme( 52, "Ih", 0.85, "")
  Phoneme( 53, "Uu", 0.85, "")
  Phoneme( 54, "Uh", 0.85, "")
  Phoneme( 55, "Ax", 0.85, "")
  Phoneme( 56, "Ux", 0.85, "")
  Phoneme( 57, "Ae", 0.85, "") 
  Phoneme( 58, "Er", 0.85, "")
  Phoneme( 59, "Axr", 0.85, "") 
  Phoneme( 60, "Exr", 0.85, "")
  Phoneme( 61, "Ey", 0.85, "")
  Phoneme( 62, "Aw", 0.85, "")
  Phoneme( 63, "Ay", 0.85, "")
  Phoneme( 64, "Oy", 0.85, "")
  Phoneme( 65, "Ow", 0.85, "")
}


