// navmesh tool syntax

!Tool(s)                            // new tool definition
                                    // s - tool name (visible in navmesh plugin tollbox combo)
!Action(s)                          // action name

!ExcludedArea(s)                    // excluded area type - one can use this method a several times

!HardToPassArea(s)                  // defines "hard to pass" area type - one can use this method a several times

!PreferredArea(s)                   // defines preferred area type - one can use this method a several times

!AllowAllConnections()              // allow every connection type
!AllowConnection(s)                 // allowed connection types
!DisallowAllConnections()           // disallow every connection type
!DisallowConnection(s)              // disallowed connection types

!MaxVisibleDistance(f)              // max distance of path when searching - if this distance is reached finding is aborted. -1 means no distance limits

!AngleAdditionalCost(f)             // additional cost of trespassing the path which is proportional to angle between connections
                                    // angle is measured in this manner:
                                    // 0 DEG (straight path) = 0,
                                    // 90 DEG = 1, 
                                    // 180 DEG = 2,
                                    // for example if you go from node A to B with 90 DEG turn additional cost will be 1 * angle_additional_cost

!ConsiderDynamicObjects(i)          // if dynamic objects (registered in navmesh as a dynamic objects) will be considered in pathfinding
!MoveAwayFromPoint(i)				// used for finding path away from end point instead of to it

!ConnectionCostMul(f)               // multiplier of cost of trespassing connection - default = 1.f
                                    // but for some agents it may be greater or lower (keep in range [0.1 - 10])

!MaxConnectionHeightUp(f)           // max vertical distance of connection agent can pass through up 
                                    // if -1 (default value) each connection height (in up direction) will be allowed

!MaxConnectionHeightDown(f)         // max vertical distance of connection agent can pass through down 
                                    // if -1 (default value) each connection height (in down direction) will be allowed

!MaxConnectionHorizDistance(f)      // max horizontal distance of connection agent can pass through
                                    // if -1 (default value) each connection horizontal distance will be allowed

!RandomPathFactor(f)                // random cost added to trespassing cost as factor of whole cost (0 - default) - keep in range [0 - 1]
                                    // i.e. for random_path_factor == 0.2 and path len == 10 agent can choose another path with length from 8 to 12
                                    // such randomized path may lead by different set of polygons (other passage) than original path
                                    // may be used to diversify paths of group of agents which are heading the same target
                                    
!RandomPassMaxDeviation(f)          // random path deviation added to shortest pass-through. To disable set 0 (default)
                                    // randomized pass will be lead by the same set of polygons, but random deviation will be added on every poly's edge passing
                                    // may be used to diversify pass through the same path

!AllowAllUserConnections()          // allow every user connection type
!DisallowAllUserConnections()       // disallow every user connection type
!AllowUserConnection(i)             // allowed user connection types - one can use this method a several times
!DisallowUserConnection(i)          // disallowed user connection types - one can use this method a several times
!KeepDistanceFromHotPos(f)          // keep the path (if possible) away from position, given by hot_pos, keep_distance_from_hot_pos defines distance in meters of that avoidance
                                    // -1 (default) - feature disabled
									// hot_pos itself can be pointed in editor (ctrl+shift+LMB)

!MinPathWidth(f)                    // min width of path corridor (including agent size) - there should not be narrowed corridors in found path                                    
!UserAreaCostMul(i, f)              // defines cost multiplier (f) of passing through given user area (i) spolygon
!RaycastCalculateMaxConnectionHeight(i)  // calculates raycast connections statistics (max conn height up and down), default = 0
                                    
// actions:             Pathfinding, Raycast, Simulate
// area types:          RegularGround, Water, HardToPass, Road, Connection
// connection types:    Generic, Ladder, User




