import "StatsStuff.scr"
import "ChallengeClasses.scr"

sub main() 
{
	// -------------------------------------------------------------
	// Slums
	// -------------------------------------------------------------
	
	// Gas station
	Challenge("storyslums_safezone_01")
	{
        use SafeZoneCompetitionClass();
        PositiveEvent("Kill")
        {
            Count(0);
            InsideSensor("Gas_Station_Safezone::SafeZone_ca");
        }
	}
	
	// Gas station 2
	Challenge("storyslums_safezone_02")
	{
        use SafeZoneCompetitionClass();
        PositiveEvent("Kill")
        {
            Count(0);
            InsideSensor("Gas_Station_SafeZone_02::SafeZone_ca");
        }
	}
	
	// Playfield
	Challenge("storyslums_safezone_03")
	{
        use SafeZoneCompetitionClass();
        PositiveEvent("Kill")
        {
            Count(0);
            InsideSensor("Playfield_Safezone::SafeZone_ca");
        }
	}
	
	// Playfield 2
	Challenge("storyslums_safezone_04")
	{
        use SafeZoneCompetitionClass();
        PositiveEvent("Kill")
        {
            Count(0);
            InsideSensor("Playfield_Safezone2::SafeZone_ca");
        }
	}
	
	// Construction site
	Challenge("storyslums_safezone_05")
	{
        use SafeZoneCompetitionClass();
        PositiveEvent("Kill")
        {
            Count(0);
            InsideSensor("Construction_Site_Safezone::SafeZone_ca");
        }
	}
	
	// Interior 01
	Challenge("storyslums_safezone_06")
	{
        use SafeZoneCompetitionClass();
        PositiveEvent("Kill")
        {
            Count(0);
            InsideSensor("Interior_01_SafeZone::SafeZone_ca");
        }
	}
	
	// Interior 02
	Challenge("storyslums_safezone_07")
	{
        use SafeZoneCompetitionClass();
        PositiveEvent("Kill")
        {
            Count(0);
            InsideSensor("Interior_02_SafeZone::SafeZone_ca");
        }
	}
	
	// Tunnel 01
	Challenge("storyslums_safezone_09")
	{
        use SafeZoneCompetitionClass();
        PositiveEvent("Kill")
        {
            Count(0);
            InsideSensor("Tunnel_01_SafeZone::SafeZone_ca");
        }
	}
	
	// Bar Site
	Challenge("storyslums_safezone_10")
	{
        use SafeZoneCompetitionClass();
        PositiveEvent("Kill")
        {
            Count(0);
            InsideSensor("Bar_Site_Safezone::SafeZone_ca");
        }
	}
	
	// Roof Site
	Challenge("storyslums_safezone_11")
	{
        use SafeZoneCompetitionClass();
        PositiveEvent("Kill")
        {
            Count(0);
            InsideSensor("Roof_Safezone::SafeZone_ca;");
        }
	}
	
	// Interior 03
	Challenge("storyslums_safezone_12")
	{
        use SafeZoneCompetitionClass();
        PositiveEvent("Kill")
        {
            Count(0);
            InsideSensor("Interior_03_Safezone::SafeZone_ca");
        }
	}
    
	// -------------------------------------------------------------
	// Old town
	// -------------------------------------------------------------
	
	// Blue tower 
    // __blue_tower
	Challenge("storyoldtown_safezone_01")
	{
        use SafeZoneCompetitionClass();
        PositiveEvent("Kill")
        {
            Count(0);
            InsideSensor("blue_tower::SafeZone_ca");
        }
	}

	// Restaurant
    // __restaurant_safezone
	Challenge("storyoldtown_safezone_02")
	{
        use SafeZoneCompetitionClass();
        PositiveEvent("Kill")
        {
            Count(0);
            InsideSensor("restaurant::SafeZone_ca");
        }
	}

	// HOUSE INTERIOR 01
    // __house_interior01
	Challenge("storyoldtown_safezone_03")
	{
        use SafeZoneCompetitionClass();
        PositiveEvent("Kill")
        {
            Count(0);
            InsideSensor("house_interior01::safezone::SafeZone_ca");
        }
	}

	// HOUSE INTERIOR 02
    // __house_interior02
	Challenge("storyoldtown_safezone_04")
	{
        use SafeZoneCompetitionClass();
        PositiveEvent("Kill")
        {
            Count(0);
            InsideSensor("house_interior02::safezone::SafeZone_ca");
        }
	}
	// HOUSE INTERIOR 04
    // __house_interior04
	Challenge("storyoldtown_safezone_05")
	{
        use SafeZoneCompetitionClass();
        PositiveEvent("Kill")
        {
            Count(0);
            InsideSensor("house_interior04::safezone::SafeZone_ca");
        }
	}
}