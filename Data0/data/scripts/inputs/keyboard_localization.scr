sub LocalizedKeys()
{
    //HOWTO: Key(int_keycode, "&localization_id&");  keycode is taken form EKey
    //example: Key(17, "&new_W&");  Key 'W' will be displayed as [&new_W&] instead of [W]


    Key(15,  "&DIK_TAB&");          // #define DIK_TAB             0x0F
    Key(58,  "&DIK_CAPSLOCK&");     // #define DIK_CAPSLOCK        0x3A
    Key(28,  "&DIK_RETURN&");       // #define DIK_RETURN          0x1C    /* Enter on main keyboard */
    Key(57,  "&DIK_SPACE&");        // #define DIK_SPACE           0x39
    Key(14,  "&DIK_BACKSPACE&");    // #define DIK_BACKSPACE       0x0E    /* backspace */

    Key(42,  "&DIK_LSHIFT&");       // #define DIK_LSHIFT          0x2A
    Key(54,  "&DIK_RSHIFT&");       // #define DIK_RSHIFT          0x36
    Key(29,  "&DIK_LCONTROL&");     // #define DIK_LCONTROL        0x1D
    Key(157, "&DIK_RCONTROL&");     // #define DIK_RCONTROL        0x9D
    Key(56,  "&DIK_LALT&");         // #define DIK_LALT            0x38    /* left Alt */
    Key(184, "&DIK_RALT&");         // #define DIK_RALT            0xB8    /* right Alt */

    Key(200, "&DIK_UPARROW&");      // #define DIK_UPARROW         0xC8    /* UpArrow on arrow keypad */
    Key(203, "&DIK_LEFTARROW&");    // #define DIK_LEFTARROW       0xCB    /* LeftArrow on arrow keypad */
    Key(205, "&DIK_RIGHTARROW&");   // #define DIK_RIGHTARROW      0xCD    /* RightArrow on arrow keypad */
    Key(208, "&DIK_DOWNARROW&");    // #define DIK_DOWNARROW       0xD0    /* DownArrow on arrow keypad */

    Key(199, "&DIK_HOME&");         // #define DIK_HOME            0xC7    /* Home on arrow keypad */
    Key(207, "&DIK_END&");          // #define DIK_END             0xCF    /* End on arrow keypad */
    Key(201, "&DIK_PGUP&");         // #define DIK_PGUP            0xC9    /* PgUp on arrow keypad */
    Key(209, "&DIK_PGDN&");         // #define DIK_PGDN            0xD1    /* PgDn on arrow keypad */
    Key(210, "&DIK_INSERT&");       // #define DIK_INSERT          0xD2    /* Insert on arrow keypad */
    Key(211, "&DIK_DELETE&");       // #define DIK_DELETE          0xD3    /* Delete on arrow keypad */

    Key(69,  "&DIK_NUMLOCK&");      // #define DIK_NUMLOCK         0x45
    Key(55,  "&DIK_NUMPADSTAR&");   // #define DIK_NUMPADSTAR      0x37    /* * on numeric keypad */
    Key(74,  "&DIK_NUMPADMINUS&");  // #define DIK_NUMPADMINUS     0x4A    /* - on numeric keypad */
    Key(78,  "&DIK_NUMPADPLUS&");   // #define DIK_NUMPADPLUS      0x4E    /* + on numeric keypad */
    Key(83,  "&DIK_NUMPADPERIOD&"); // #define DIK_NUMPADPERIOD    0x53    /* . on numeric keypad */
    Key(181, "&DIK_NUMPADSLASH&");  // #define DIK_NUMPADSLASH     0xB5    /* / on numeric keypad */
    Key(156, "&DIK_NUMPADENTER&");  // #define DIK_NUMPADENTER     0x9C    /* Enter on numeric keypad */

    Key(82,  "&DIK_NUMPAD0&");      // #define DIK_NUMPAD0         0x52
    Key(79,  "&DIK_NUMPAD1&");      // #define DIK_NUMPAD1         0x4F
    Key(80,  "&DIK_NUMPAD2&");      // #define DIK_NUMPAD2         0x50
    Key(81,  "&DIK_NUMPAD3&");      // #define DIK_NUMPAD3         0x51
    Key(75,  "&DIK_NUMPAD4&");      // #define DIK_NUMPAD4         0x4B
    Key(76,  "&DIK_NUMPAD5&");      // #define DIK_NUMPAD5         0x4C
    Key(77,  "&DIK_NUMPAD6&");      // #define DIK_NUMPAD6         0x4D
    Key(71,  "&DIK_NUMPAD7&");      // #define DIK_NUMPAD7         0x47
    Key(72,  "&DIK_NUMPAD8&");      // #define DIK_NUMPAD8         0x48
    Key(73,  "&DIK_NUMPAD9&");      // #define DIK_NUMPAD9         0x49

    Key(70,  "&DIK_SCROLL&");       // #define DIK_SCROLL          0x46    /* Scroll Lock */

    // These keys should be forbidden for mapping:
    //Key(183, "&DIK_SYSRQ&");        // #define DIK_SYSRQ           0xB7
	//Key(197, '&DIK_PAUSE&');	//    #define 	DIK_PAUSE   0xC5

    // other keys mappings to the ones we know
	Key(126, "&DIK_NUMPADPERIOD&");	//define DIK_ABNT_C2  0x7E /* Numpad . on Portugese (Brazilian) keyboards */ */ */

}

sub main()
{
    use LocalizedKeys();
}

