import "inputs.def" 
//AddAction(_ACTION_ID, EInputTarget, EInputDevice, analog, AxisOrButtonId, reverse, halfscope)

sub Pad()
{
    Layout("Common", false)
    {
        Preset("")
        {
			AddAction(_ACTION_TRACK_QUEST, EInputTarget_HUD, EInputDevice_Analog, false, EJoy__BUTTON_DPADUP, false, true);
            AddAction(_ACTION_BRIEF_CONTINUE, EInputTarget_HUD, EInputDevice_Analog, false, EJoy__BUTTON_A, false, true);
            AddAction(_ACTION_BRIEF_DECLINE, EInputTarget_HUD, EInputDevice_Analog, false, EJoy__BUTTON_B, false, true);
            
            AddAction(_ACTION_SONAR_IMPULSE, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_A, false, true) { HoldTime(0.3); }
            AddAction(_ACTION_VEHICLE_SONAR_IMPULSE, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_A, false, true) { HoldTime(0.3); }
            AddAction(_ACTION_HEAL, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_DPADDOWN, false, true);
            AddAction(_ACTION_VEHICLE_HEAL, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_DPADDOWN, false, true);
            
            AddAction(_ACTION_TOGGLE_FLASHLIGHT, EInputTarget_Player, EInputDevice_Analog, true, EJoy__BUTTON_DPADUP, false, false);    
            AddAction(_ACTION_RECHARGE_FLASHLIGHT, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_DPADUP, false, false);    
            AddAction(_ACTION_CAR_LIGHTS_TOGGLE, EInputTarget_Player, EInputDevice_Analog, true, EJoy__BUTTON_DPADUP, false, false); 	
            AddAction(_ACTION_FAST_EQUIP_ITEM, EInputTarget_Player, EInputDevice_Analog, true, EJoy__BUTTON_DPADUP, false, true) { HoldTime(0.1); } 
            
          
            AddAction(_ACTION_SPRINT_TOGGLE, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_LEFTTHUMB, false, true);

            AddAction(_ACTION_KICK, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_LEFTSHOULDER, false, false);            
            AddAction(_ACTION_TACLE, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_LEFTSHOULDER, false, false);            

            AddAction(_ACTION_USE_EQUIPEMENT, EInputTarget_Player, EInputDevice_Analog, false, EJoy__AXIS_LEFTTRIGGER, false, false);
            
            AddAction(_ACTION_ATTACK_TRIGGER_L, EInputTarget_Player, EInputDevice_Analog, false, EJoy__AXIS_LEFTTRIGGER, false, false) { Hysteresis(0.2, 0.2);}
            
            AddAction(_ACTION_INVENTORY, EInputTarget_Module, EInputDevice_Analog, false, EJoy__BUTTON_BACK, false, false);
            AddAction(_ACTION_INVENTORY, EInputTarget_Module, EInputDevice_Analog, false, EJoy__BUTTON_TOUCHPAD, false, false);
                        
            AddAction(_ACTION_INGAME_MENU, EInputTarget_Module, EInputDevice_Analog, false, EJoy__BUTTON_START, false, true);
            
            AddAction(_ACTION_MF_LOAD_LAST_SAVE, EInputTarget_Module, EInputDevice_Analog, false, EJoy__BUTTON_A, false, true);
            AddAction(_ACTION_MF_ROLLBACK, EInputTarget_Module, EInputDevice_Analog, false, EJoy__BUTTON_A, false, true);
			AddAction(_ACTION_NEXT_HINT, EInputTarget_HUD, EInputDevice_Analog, false, EJoy__BUTTON_X, false, true);

            AddAction(_ACTION_JUMP, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_RIGHTSHOULDER, false, true) { Hysteresis(0.3, 0.3); }
            AddAction(_ACTION_TAP_MINIGAME, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_A, false, false);
            AddAction(_ACTION_FIRE_RHAND_WEAPON, EInputTarget_Player, EInputDevice_Analog, false, EJoy__AXIS_RIGHTTRIGGER, false, true);
            AddAction(_ACTION_FIRE_WEAPON, EInputTarget_Player, EInputDevice_Analog, false, EJoy__AXIS_RIGHTTRIGGER, false, true);
            AddAction(_ACTION_ATTACK_TRIGGER_R, EInputTarget_Player, EInputDevice_Analog, false, EJoy__AXIS_RIGHTTRIGGER, false, false) { Hysteresis(0.2, 0.2);}
            
            AddAction(_ACTION_THROW_CARRYING_ITEM, EInputTarget_Player, EInputDevice_Analog, false, EJoy__AXIS_RIGHTTRIGGER, false, true);
            AddAction(_ACTION_ATTACK, EInputTarget_Player, EInputDevice_Analog, false, EJoy__AXIS_RIGHTTRIGGER, false, true);
            AddAction(_ACTION_CANCEL_MULTI_THROW, EInputTarget_Player, EInputDevice_Analog, false, EJoy__AXIS_RIGHTTRIGGER, false, true);
                        
            AddAction(_ACTION_CHARGE_ATTACK, EInputTarget_Player, EInputDevice_Analog, true, EJoy__AXIS_RIGHTTRIGGER, false, false);

            AddAction(_ACTION_TOGLE_ENGINE, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_A, false, true);
            AddAction(_ACTION_EXECUTE_TRIGGER, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_X, false, false);
            AddAction(_ACTION_MF_QUIT, EInputTarget_Module, EInputDevice_Analog, false, EJoy__BUTTON_START, false, true);        
            AddAction(_ACTION_ADD_TO_CONTAINER, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_X, false, true);    
            AddAction(_ACTION_SWAP_TRIGGER, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_X, false, true) { HoldTime(0.5); }
            
            AddAction(_ACTION_SKIP_MOVIE, EInputTarget_Module, EInputDevice_Analog, false, EJoy__BUTTON_B, false, true);			         
            
            AddAction(_ACTION_BREAK_DIALOG, EInputTarget_HUD, EInputDevice_Analog, false, EJoy__BUTTON_B, false, true);
            AddAction(_ACTION_EXECUTE_TRIGGER3, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_B, false, true);
            AddAction(_ACTION_LOCKPICKING_EXIT,           EInputTarget_Module, EInputDevice_Analog, false, EJoy__BUTTON_B, false, true);
            
            AddAction(_ACTION_DUCK_TOGGLE, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_B, false, false);            
            AddAction(_ACTION_LEAVE_STATIONARY_CANNON, 	EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_B, false, false);
            AddAction(_ACTION_DROP_CARRYING_ITEM, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_B, false, true) { HoldTime(0.3); }
            AddAction(_ACTION_LEAVE_LADDER, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_B, false, false);
            AddAction(_ACTION_SLIDE_LADDER, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_B, false, true) { HoldTime(0.3); }
            AddAction(_ACTION_GROUND_POUND, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_B, false, true) { HoldTime(0.3); }

            AddAction(_ACTION_EXECUTE_TRIGGER2, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_A, false, true);	
            AddAction(_ACTION_MF_DROPOUT_LOADLASTSAVE, EInputTarget_Module, EInputDevice_Analog, false, EJoy__BUTTON_Y, false, true);	
            
            AddAction(_ACTION_REPAIR_WEAPON, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_Y, false, true) { HoldTime(0.2); }		// HoldTime is only to start repairing progress, then holding input is manage from RepairWeaponController.			
            AddAction(_ACTION_LOOKBACK, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_Y, false, true) { HoldTime(0.2); }

            AddAction(_ACTION_RELOAD, EInputTarget_Player, EInputDevice_Analog, true, EJoy__BUTTON_X, false, true);
            AddAction(_ACTION_EXECUTE_TRIGGER4, EInputTarget_Player, EInputDevice_Analog, true, EJoy__BUTTON_Y, false, false);	
            AddAction(_ACTION_EXECUTE_NAGEWAZA, EInputTarget_Player, EInputDevice_Analog, true, EJoy__BUTTON_A, false, false);	
            
            AddAction(_ACTION_WEAPON_AIM_TOGGLE, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_RIGHTTHUMB, false, false);
            AddAction(_ACTION_WEAPON_THROW, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_RIGHTTHUMB, false, false);
			AddAction(_ACTION_CANCEL_ARROW, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_Y, false, false);
    //             AddAction(_ACTION_QUICK_ACTIONS, EInputTarget_Module, EInputDevice_Analog, false, EJoy__BUTTON_BACK, false, true) { HoldTime(0.3); }
    //             AddAction(_ACTION_QUICK_ACTIONS, EInputTarget_Module, EInputDevice_Analog, false, EJoy__BUTTON_TOUCHPAD, false, true) { HoldTime(0.3); }

            AddAction(_ACTION_APPEAR_IN_WAITING_PLACE, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_BACK, false, true) { HoldTime(0.5); }
            AddAction(_ACTION_APPEAR_IN_WAITING_PLACE, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_TOUCHPAD, false, true) { HoldTime(0.5); }

            AddAction(_ACTION_QUICK_PRIMARY, EInputTarget_HUD, EInputDevice_Analog, false, EJoy__BUTTON_DPADRIGHT, false, true);
            AddAction(_ACTION_QUICK_SECONDARY, EInputTarget_HUD, EInputDevice_Analog, false, EJoy__BUTTON_DPADLEFT, false, true);
            
            AddAction(_ACTION_QTE1, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_X, false, false);
            AddAction(_ACTION_QTE2, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_A, false, false);
            AddAction(_ACTION_QTE3, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_B, false, false);
            AddAction(_ACTION_QTE4, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_Y, false, false);
            
            AddAction(_ACTION_QTE5, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_LEFTSHOULDER, false, false);
            AddAction(_ACTION_QTE6, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_RIGHTSHOULDER, false, false);
            
            AddAction(_ACTION_SELECT_PRIMARY1, EInputTarget_HUD, EInputDevice_Analog, false, EJoy__BUTTON_Y, false, false);
            AddAction(_ACTION_SELECT_PRIMARY2, EInputTarget_HUD, EInputDevice_Analog, false, EJoy__BUTTON_B, false, false);
            AddAction(_ACTION_SELECT_PRIMARY3, EInputTarget_HUD, EInputDevice_Analog, false, EJoy__BUTTON_A, false, false);
            AddAction(_ACTION_SELECT_PRIMARY4, EInputTarget_HUD, EInputDevice_Analog, false, EJoy__BUTTON_X, false, false);
            
            AddAction(_ACTION_SELECT_PRIMARY1, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_RY, false, true);
            AddAction(_ACTION_SELECT_PRIMARY2, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_RX, false, true);
            AddAction(_ACTION_SELECT_PRIMARY3, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_RY, true, true);
            AddAction(_ACTION_SELECT_PRIMARY4, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_RX, true, true);
            
            AddAction(_ACTION_SELECT_SECONDARY1, EInputTarget_HUD, EInputDevice_Analog, false, EJoy__BUTTON_Y, false, false);
            AddAction(_ACTION_SELECT_SECONDARY2, EInputTarget_HUD, EInputDevice_Analog, false, EJoy__BUTTON_B, false, false);
            AddAction(_ACTION_SELECT_SECONDARY3, EInputTarget_HUD, EInputDevice_Analog, false, EJoy__BUTTON_A, false, false);
            AddAction(_ACTION_SELECT_SECONDARY4, EInputTarget_HUD, EInputDevice_Analog, false, EJoy__BUTTON_X, false, false);
            
            AddAction(_ACTION_SELECT_SECONDARY1, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_RY, false, true);
            AddAction(_ACTION_SELECT_SECONDARY2, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_RX, false, true);
            AddAction(_ACTION_SELECT_SECONDARY3, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_RY, true, true);
            AddAction(_ACTION_SELECT_SECONDARY4, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_RX, true, true);

            /// ARROWS SELECTION INPUTS
            AddAction(_ACTION_QUICK_ARROWS, EInputTarget_HUD, EInputDevice_Analog, false, EJoy__BUTTON_X, false, true);			
            
            AddAction(_ACTION_SELECT_ARROW1, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_Y, false, true);
            AddAction(_ACTION_SELECT_ARROW2, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_X, false, true);
            AddAction(_ACTION_SELECT_ARROW3, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_Y, true, true);
            AddAction(_ACTION_SELECT_ARROW4, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_X, true, true);
            
            AddAction(_ACTION_SELECT_ARROW1, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_RY, false, true);
            AddAction(_ACTION_SELECT_ARROW2, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_RX, false, true);
            AddAction(_ACTION_SELECT_ARROW3, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_RY, true, true);
            AddAction(_ACTION_SELECT_ARROW4, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_RX, true, true);
            
            /// BOLTS SELECTION INPUTS
            AddAction(_ACTION_QUICK_BOLTS, EInputTarget_HUD, EInputDevice_Analog, false, EJoy__BUTTON_X, false, true);		
            
            AddAction(_ACTION_SELECT_BOLT1, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_Y, false, true);
            AddAction(_ACTION_SELECT_BOLT2, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_X, false, true);
            AddAction(_ACTION_SELECT_BOLT3, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_Y, true, true);
            AddAction(_ACTION_SELECT_BOLT4, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_X, true, true);
            
            AddAction(_ACTION_SELECT_BOLT1, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_RY, false, true);
            AddAction(_ACTION_SELECT_BOLT2, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_RX, false, true);
            AddAction(_ACTION_SELECT_BOLT3, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_RY, true, true);
            AddAction(_ACTION_SELECT_BOLT4, EInputTarget_HUD, EInputDevice_Analog, true, EJoy__AXIS_RX, true, true);
            ///////////////////////////
            
            AddAction(_ACTION_REMOTE_BREAKER, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_X, false, true);
                        
            AddAction(_ACTION_DISMISS_FREEZING_TUTORIAL, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_A, false, true);
            
            AddAction(_ACTION_RECALL_VEHICLE, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_X, false, true) { HoldTime(0.5); }

            // This action should be at the end of the list as we don't want to get any other actions assigned to the same button
            // after we've handled breaking the minigame.
            // Otherwise, the player would e.g. duck after breaking the interaction minigame.
            // This problem might potentially affect other actions as well. We need to carefully choose the order of actions
            // or resolve this issue somehow in code.
            AddAction(_ACTION_BREAK_MINIGAME, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_B, false, true);        

            AddAction(_ACTION_RESPAWN_NEAR_OTHER_PLAYERS, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_X, false, true);        

            AddAction(_ACTION_USE_MANUP, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_X, false, true);    

            AddAction(_ACTION_SHOW_HINT, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_Y, false, false);
            
            AddAction(_ACTION_CREATE_COOP_CHALLENGE, EInputTarget_HUD, EInputDevice_Analog, false, EJoy__BUTTON_BACK, false, true);
            AddAction(_ACTION_CREATE_COOP_CHALLENGE, EInputTarget_HUD, EInputDevice_Analog, false, EJoy__BUTTON_TOUCHPAD, false, true);
            
            AddAction(_ACTION_FORCE_RESPAWN, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_X, false, false) { HoldTime(0.3); }

            //BTZ
            // Shoulders
            //
            AddAction(_ACTION_ROPE_THROW,               EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_LEFTSHOULDER,      false, false);            
            
            // Triggers
            //
            AddAction(_ACTION_ZOMBIE_THROW_SPIT,        EInputTarget_Player, EInputDevice_Analog, false, EJoy__AXIS_LEFTTRIGGER,     false, false);   
            AddAction(_ACTION_PLAYERZOMBIE_MELEE,       EInputTarget_Player, EInputDevice_Analog, false, EJoy__AXIS_RIGHTTRIGGER,     false, false);
            AddAction(_ACTION_ZOMBIE_GROUND_POUND,      EInputTarget_Player, EInputDevice_Analog, false, EJoy__AXIS_RIGHTTRIGGER,     false, false) { HoldTime(0.8); }          
            AddAction(_ACTION_SPIT_GROUND_POUND,        EInputTarget_Player, EInputDevice_Analog, false, EJoy__AXIS_LEFTTRIGGER,   false, false) { HoldTime(0.2); ConnectedAction(_ACTION_PLAYERZOMBIE_MELEE); }
            AddAction(_ACTION_SPIT_GROUND_POUND2,       EInputTarget_Player, EInputDevice_Analog, false, EJoy__AXIS_RIGHTTRIGGER,     false, false) { HoldTime(0.2); ConnectedAction(_ACTION_ZOMBIE_THROW_SPIT); } 
            
            // Face Buttons
            //
            AddAction(_ACTION_ZOMBIE_EXECUTE_TRIGGER2,  EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_A,                false, false);   
            AddAction(_ACTION_POUNCE,                   EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_X,                false, false);            
            AddAction(_ACTION_PLAYERZOMBIE_CHARGE,      EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_B,		        false, false);            
            AddAction(_ACTION_SPIT_DEFENSIVE_SMOKE,     EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_Y,                false, false);
            AddAction(_ACTION_UV_HEAL,                  EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_Y,                false, false) { HoldTime(0.5); }               
            AddAction(_ACTION_ZOMBIE_HOWL,              EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_A,                false, false);	
            AddAction(_ACTION_CANCEL_CHARGING,          EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_B,                false, false);
            AddAction(_ACTION_ZOMBIE_LEAVE_VEHICLE,     EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_B,                false, false);
           
            
    //             AddAction(_ACTION_QUICK_ACTIONS, EInputTarget_Module, EInputDevice_Analog, false, EJoy__BUTTON_BACK, false, false) { HoldTime(0.3); }
    //             AddAction(_ACTION_QUICK_ACTIONS, EInputTarget_Module, EInputDevice_Analog, false, EJoy__BUTTON_TOUCHPAD, false, false) { HoldTime(0.3); }
            
            AddAction(_ACTION_ZOMBIE_SHOW_HINT,         EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_DPADUP,  false, false);
            AddAction(_ACTION_SPIT_CONTROL_THE_HORDE,   EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_DPADLEFT,   false, true);
            AddAction(_ACTION_SPIT_LIGHT_DISABLE,       EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_DPADRIGHT,   false, true); 
            AddAction(_ACTION_SPIT_TOXIC,               EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_DPADUP,   false, true);            
            AddAction(_ACTION_SPIT_CAMO,                EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_DPADDOWN,   false, true);
            
            
            
        }
    }
   
    Layout("stick_base")
    {
        Preset("")
        {
            AddAction(_ACTION_FORWARD, EInputTarget_Player, EInputDevice_Analog, true, EJoy__AXIS_Y, false, true);
            AddAction(_ACTION_BACKWARD, EInputTarget_Player, EInputDevice_Analog, true, EJoy__AXIS_Y, true, true);
            
            AddAction(_ACTION_STRAFE_LEFT, EInputTarget_Player, EInputDevice_Analog, true, EJoy__AXIS_X, true, true);
            AddAction(_ACTION_STRAFE_RIGHT, EInputTarget_Player, EInputDevice_Analog, true, EJoy__AXIS_X, false, true);
            
            AddAction(_ACTION_ROTATE_LEFT, EInputTarget_Player, EInputDevice_Analog, true, EJoy__AXIS_RX, true, true);
            AddAction(_ACTION_ROTATE_RIGHT, EInputTarget_Player, EInputDevice_Analog, true, EJoy__AXIS_RX, false, true);
            
            AddAction(_ACTION_ROTATE_UP, EInputTarget_Player, EInputDevice_Analog, true, EJoy__AXIS_RY, false, true);
            AddAction(_ACTION_ROTATE_DOWN, EInputTarget_Player, EInputDevice_Analog, true, EJoy__AXIS_RY, true, true);
            
            AddAction(_ACTION_LOCKPICKING_SCREWDRIVER_LEFT,  EInputTarget_Module, EInputDevice_Analog, true, EJoy__AXIS_RX, true,  true);
            AddAction(_ACTION_LOCKPICKING_SCREWDRIVER_RIGHT, EInputTarget_Module, EInputDevice_Analog, true, EJoy__AXIS_RX, false, true);
            AddAction(_ACTION_LOCKPICKING_SCREWDRIVER_UP,  EInputTarget_Module, EInputDevice_Analog, true, EJoy__AXIS_RY, true,  true);
            AddAction(_ACTION_LOCKPICKING_SCREWDRIVER_DOWN, EInputTarget_Module, EInputDevice_Analog, true, EJoy__AXIS_RY, false, true);
            AddAction(_ACTION_LOCKPICKING_PICKLOCK_LEFT,     EInputTarget_Module, EInputDevice_Analog, true, EJoy__AXIS_X, true,  true);
            AddAction(_ACTION_LOCKPICKING_PICKLOCK_RIGHT,    EInputTarget_Module, EInputDevice_Analog, true, EJoy__AXIS_X, false, true);
            AddAction(_ACTION_LOCKPICKING_PICKLOCK_UP,     EInputTarget_Module, EInputDevice_Analog, true, EJoy__AXIS_Y, false,  true);
            AddAction(_ACTION_LOCKPICKING_PICKLOCK_DOWN,    EInputTarget_Module, EInputDevice_Analog, true, EJoy__AXIS_Y, true, true);
                        
            AddAction(_ACTION_CLIMB_UP, EInputTarget_Player, EInputDevice_Analog, true, EJoy__AXIS_Y, false, true );
            AddAction(_ACTION_CLIMB_DOWN, EInputTarget_Player, EInputDevice_Analog, true, EJoy__AXIS_Y, true, true );
            
            AddAction(_ACTION_GRAPPLE_POINT_LEFT, EInputTarget_Player, EInputDevice_Analog, true, EJoy__AXIS_X, true, true);
            AddAction(_ACTION_GRAPPLE_POINT_RIGHT, EInputTarget_Player, EInputDevice_Analog, true, EJoy__AXIS_X, false, true);
            AddAction(_ACTION_GRAPPLE_POINT_UP, EInputTarget_Player, EInputDevice_Analog, true, EJoy__AXIS_Y, false, true);
            AddAction(_ACTION_GRAPPLE_POINT_DOWN, EInputTarget_Player, EInputDevice_Analog, true, EJoy__AXIS_Y, true, true);
        }
    }
    
    Layout("buggy_stick_base", false)
    {
        Preset("")
        {
            AddAction(_ACTION_TURN_VEHICLE_LEFT, 		EInputTarget_Player, EInputDevice_Analog, true, 	EJoy__AXIS_X, 				true, false);
            AddAction(_ACTION_TURN_VEHICLE_RIGHT, 		EInputTarget_Player, EInputDevice_Analog, true, 	EJoy__AXIS_X, 				false, false);  
        }
    }
    
    Layout("firearms")
    {
        Preset("&MenuGamepad_Preset_Default_$&") 
        {
        }
        Preset("&MenuGamepad_Preset_Preset2_$&")
        {
            RemoveAction(_ACTION_KICK);
            AddAction(_ACTION_KICK, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_RIGHTTHUMB, false, false);            
            
            RemoveAction(_ACTION_TACLE);
            AddAction(_ACTION_TACLE, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_RIGHTTHUMB, false, false);            
            
            RemoveAction(_ACTION_USE_EQUIPEMENT);
            AddAction(_ACTION_USE_EQUIPEMENT, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_LEFTSHOULDER, false, false);
            
            RemoveAction(_ACTION_WEAPON_AIM_TOGGLE);
            AddAction(_ACTION_WEAPON_ZOOM, EInputTarget_Player, EInputDevice_Analog, false, EJoy__AXIS_LEFTTRIGGER, false, false);
            
            RemoveAction(_ACTION_WEAPON_THROW);
            AddAction(_ACTION_WEAPON_THROW, EInputTarget_Player, EInputDevice_Analog, false, EJoy__AXIS_LEFTTRIGGER, false, false);
        }
        Preset("&MenuGamepad_Preset_Preset3_$&")
        {
            RemoveAction(_ACTION_USE_EQUIPEMENT);
            AddAction(_ACTION_USE_EQUIPEMENT, EInputTarget_Player, EInputDevice_Analog, false, EJoy__BUTTON_RIGHTTHUMB, false, false);
            
            RemoveAction(_ACTION_WEAPON_AIM_TOGGLE);
            AddAction(_ACTION_WEAPON_ZOOM, EInputTarget_Player, EInputDevice_Analog, false, EJoy__AXIS_LEFTTRIGGER, false, false);
            
            RemoveAction(_ACTION_WEAPON_THROW);
            AddAction(_ACTION_WEAPON_THROW, EInputTarget_Player, EInputDevice_Analog, false, EJoy__AXIS_LEFTTRIGGER, false, false);
        }
    }
    
    Layout("buttons_layout")
    {
        Preset("&MenuGamepad_Preset_Default_$&") 
        {
            DefaultSouthpawOption(false);
        }
        Preset("&MenuGamepad_Preset_Southpaw_$&")
        {
            DefaultSouthpawOption(true);
            
            SwapInputs(EInputDevice_Analog, EJoy__AXIS_RIGHTTRIGGER,    EJoy__AXIS_LEFTTRIGGER);
            SwapInputs(EInputDevice_Analog, EJoy__BUTTON_RIGHTSHOULDER, EJoy__BUTTON_LEFTSHOULDER);
            SwapInputs(EInputDevice_Analog, EJoy__BUTTON_RIGHTTHUMB,    EJoy__BUTTON_LEFTTHUMB);
        }
    }
	
    Layout("triggers")
    {
        Preset("&MenuGamepad_Preset_Default_$&") {}
        Preset("&MenuGamepad_Preset_Preset2_$&")
        {
            DefaultOnPS3();
            
            SwapInputs(EInputDevice_Analog, EJoy__AXIS_RIGHTTRIGGER, EJoy__BUTTON_RIGHTSHOULDER);
            SwapInputs(EInputDevice_Analog, EJoy__AXIS_LEFTTRIGGER, EJoy__BUTTON_LEFTSHOULDER);
        }
        
        Preset("&MenuGamepad_Preset_Preset3_$&")
        {
            SwapInputs(EInputDevice_Analog, EJoy__AXIS_RIGHTTRIGGER, EJoy__BUTTON_RIGHTSHOULDER);
        }
        
        Preset("&MenuGamepad_Preset_Preset4_$&")
        {
            SwapInputs(EInputDevice_Analog, EJoy__AXIS_LEFTTRIGGER, EJoy__BUTTON_LEFTSHOULDER);
        }
    }
    
    Layout("buggy_base", false)
    {
        Preset("")
        {
            AddAction(_ACTION_THROTTLE,                 EInputTarget_Player, EInputDevice_Analog, true,     EJoy__AXIS_RIGHTTRIGGER,    false, true); 
            AddAction(_ACTION_BRAKE, 					EInputTarget_Player, EInputDevice_Analog, true, 	EJoy__AXIS_LEFTTRIGGER, 	false, true);
            AddAction(_ACTION_HANDBRAKE, 				EInputTarget_Player, EInputDevice_Analog, false, 	EJoy__BUTTON_B, 			false, false);
			AddAction(_ACTION_VEHICLE_LEAVE,			EInputTarget_Player, EInputDevice_Analog, false, 	EJoy__BUTTON_Y, 			false, false) { HoldTime(0.2); }
            
            AddAction(_ACTION_BUGGY_SKILL_0,            EInputTarget_Player, EInputDevice_Analog, false,    EJoy__BUTTON_X,             false, true);
            AddAction(_ACTION_BUGGY_SKILL_1,            EInputTarget_Player, EInputDevice_Analog, false,    EJoy__BUTTON_LEFTSHOULDER,  false, true);
            AddAction(_ACTION_BUGGY_SKILL_2,            EInputTarget_Player, EInputDevice_Analog, false,    EJoy__BUTTON_RIGHTSHOULDER, false, true);
            
            AddAction(_ACTION_VEHICLE_BREAK_GRAB, 		EInputTarget_Player, EInputDevice_Analog, false, 	EJoy__BUTTON_LEFTTHUMB, 	false, true);
            AddAction(_ACTION_VEHICLE_LOOKBACK,         EInputTarget_Player, EInputDevice_Analog, false,    EJoy__BUTTON_RIGHTTHUMB,    false, true);
        }
    }
    
    Layout("buggy_buttons_layout")
    {
        Preset("&MenuGamepad_Preset_Default_$&") 
        {
        }
        Preset("&MenuGamepad_Preset_Southpaw_$&")
        {
            //SwapActions(_ACTION_HORN,           _ACTION_VEHICLE_LOOKBACK);
            SwapActions(_ACTION_THROTTLE,       _ACTION_BRAKE);
            SwapActions(_ACTION_BUGGY_SKILL_1,  _ACTION_BUGGY_SKILL_2);
        }
    }
    
    Layout("buggy_triggers_layout")
    {
        Preset("&MenuGamepad_Preset_Default_$&") 
        {
        }
        Preset("&MenuGamepad_Preset_Preset2_$&")
        {
            SwapActions(_ACTION_THROTTLE,           _ACTION_BUGGY_SKILL_2);
            SwapActions(_ACTION_BRAKE,              _ACTION_BUGGY_SKILL_1);
        }
    }
    
    Layout("buggy_buttons2_layout")
    {
        Preset("&MenuGamepad_Preset_Default_$&") 
        {
        }
        Preset("&MenuGamepad_Preset_Preset2_$&")
        {
            SwapActions(_ACTION_VEHICLE_LEAVE, _ACTION_HANDBRAKE);
            SwapActions(_ACTION_BUGGY_SKILL_0, _ACTION_HANDBRAKE);
        }
    }
    
    Layout("stick_layout")
    {
        Preset("&MenuGamepad_Preset_Default_$&") 
        {
            DefaultSouthpawOption(false);
        }
        Preset("&MenuGamepad_Preset_Southpaw_$&")
        {
            DefaultSouthpawOption(true);
            SwapInputs(EInputDevice_Analog, EJoy__AXIS_Y, EJoy__AXIS_RY);
            SwapInputs(EInputDevice_Analog, EJoy__AXIS_X, EJoy__AXIS_RX);
        }
        Preset("&MenuGamepad_Preset_Legacy_$&")
        {
            SwapInputs(EInputDevice_Analog, EJoy__AXIS_X, EJoy__AXIS_RX);
        }
        Preset("&MenuGamepad_Preset_SouthpawLegacy_$&")
        {
            SwapInputs(EInputDevice_Analog, EJoy__AXIS_Y, EJoy__AXIS_RY);
        }
    }
    
	Layout("invert_y")
    {
        Preset("&OptionOff&") 
        {
            DefaultInvertYAxisOption(false);
        }
        Preset("&OptionOn&")
        {
            DefaultInvertYAxisOption(true);
            SwapActions(_ACTION_ROTATE_UP, _ACTION_ROTATE_DOWN);
        }
    }
	
	Layout("DefaultButtonAssignedToMakeSelection")
    {
        Preset("") 
        {
            DefaultAButtonAssignedToMakeSelection(true);
			
			// Skip movie has inverted A/B buttons than selection button:
			AddAction(_ACTION_SKIP_MOVIE, 				EInputTarget_Module, EInputDevice_Analog, false, EJoy__BUTTON_B, false, false);
			AddAction(_ACTION_START_LOADED_LEVEL,       EInputTarget_Module, EInputDevice_Analog, false, EJoy__BUTTON_A, false, true);
        }
        Preset("")
        {
            DefaultAButtonAssignedToMakeSelection(false);
			
			// Skip movie has inverted A/B buttons than selection button:
			AddAction(_ACTION_SKIP_MOVIE, 				EInputTarget_Module, EInputDevice_Analog, false, EJoy__BUTTON_A, false, false);
			AddAction(_ACTION_START_LOADED_LEVEL,       EInputTarget_Module, EInputDevice_Analog, false, EJoy__BUTTON_B, false, true);
        }
    }
    
    Layout("kinect")
    {   
        Preset("off")
        {
        }
        
        Preset("on")
        {
            DefaultOnXboxOne();

            //Lean test
            //AddAction(_ACTION_FORWARD, EInputTarget_Player, EInputDevice_Kinect, true, EKinect_LeanY, false, true);
            //AddAction(_ACTION_BACKWARD, EInputTarget_Player, EInputDevice_Kinect, true, EKinect_LeanY, true, true);
            //AddAction(_ACTION_STRAFE_LEFT, EInputTarget_Player, EInputDevice_Kinect, true, EKinect_LeanX, true, true);
            //AddAction(_ACTION_STRAFE_RIGHT, EInputTarget_Player, EInputDevice_Kinect, true, EKinect_LeanX, false, true);
        }
    }
    
    Layout("psvita", false)
    {
        Preset("No")
        {
        }
        
        Preset("yes")
        {
            AddAction(_ACTION_FORWARD, EInputTarget_Player, EInputDevice_Analog, true, EJoy__BUTTON_LEFTTHUMB, false, false);
            AddAction(_ACTION_CLIMB_UP, EInputTarget_Player, EInputDevice_Analog, true, EJoy__BUTTON_LEFTTHUMB, false, false);
            
            SwapInputs(EInputDevice_Analog, EJoy__AXIS_RIGHTTRIGGER, EJoy__BUTTON_RIGHTTHUMB);
            SwapInputs(EInputDevice_Analog, EJoy__AXIS_LEFTTRIGGER, EJoy__BUTTON_LEFTTHUMB);
        }
    }
 
    View("&MenuGamepad_View_Game&")
    {
        Layout("buttons_layout",                    "&MenuGamepad_Layout_Buttons_$&");
        Layout("stick_layout",                      "&MenuGamepad_Layout_Sticks_$&");
        Layout("triggers",                          "&MenuGamepad_Layout_Trigger_$&");
        Layout("firearms",                          "&MenuGamepad_Layout_FirearmAiming_$&");
        
        Action(_ACTION_BACKWARD,                    "&MenuGamepad_Action_MoveFB&");
        Action(_ACTION_STRAFE_RIGHT,                "&MenuGamepad_Action_MoveLR&");
        Action(_ACTION_ROTATE_RIGHT,                "&MenuGamepad_Action_LookLR&");
        Action(_ACTION_ROTATE_UP,                   "&MenuGamepad_Action_LookUD&");
        Action(_ACTION_JUMP,                        "&MenuGamepad_Action_Jump&");
        Action(_ACTION_DUCK_TOGGLE,                 "&MenuGamepad_Action_Crouch&");
        Action(_ACTION_SPRINT_TOGGLE,               "&MenuGamepad_Action_Sprint&");
        Action(_ACTION_RELOAD,                      "&MenuGamepad_Action_Reload&");
        Action(_ACTION_EXECUTE_TRIGGER,             "&MenuGamepad_Action_Use&");
        Action(_ACTION_FIRE_WEAPON,                 "&MenuGamepad_Action_Fire&");
        Action(_ACTION_WEAPON_ZOOM,                 "&MenuGamepad_Action_Aim&");
        Action(_ACTION_WEAPON_AIM_TOGGLE,           "&MenuGamepad_Action_Aim&");
        Action(_ACTION_GRENADE_THROW,               "&MenuGamepad_Action_Throw&");
        Action(_ACTION_INGAME_MENU,                 "&MenuGamepad_Action_InGameMenu&");
        Action(_ACTION_INVENTORY,                   "&MenuGamepad_Action_GameMenu&");
        Action(_ACTION_WEAPON_NEXT,                 "&MenuGamepad_Action_SwitchWeapon&");
        Action(_ACTION_KICK,                        "&MenuGamepad_Action_Kick&");
        Action(_ACTION_USE_EQUIPEMENT,              "&MenuGamepad_Action_UseEquipment&");
        Action(_ACTION_SONAR_IMPULSE,               "&MenuGamepad_Action_NightSense&");
        Action(_ACTION_TOGGLE_FLASHLIGHT,           "&MenuGamepad_Action_Flashlight&");        
        Action(_ACTION_QUICK_PRIMARY,               "&MenuGamepad_Action_PrimaryWeapon&");
        Action(_ACTION_QUICK_SECONDARY,             "&MenuGamepad_Action_SecondaryWeapon&");
        Action(_ACTION_HEAL,                        "&MenuGamepad_Action_Heal&");
        Action(_ACTION_REPAIR_WEAPON,               "&MenuGamepad_Action_RepairLookback&");        
    }

    View("&MenuGamepad_View_Hunter&", "DLC1")
    {
        Layout("buttons_layout",                    "&MenuGamepad_Layout_Buttons_$&");
        Layout("stick_layout",                      "&MenuGamepad_Layout_Sticks_$&");
        Layout("triggers",                          "&MenuGamepad_Layout_Trigger_$&");
        
        Action(_ACTION_BACKWARD,                    "&MenuGamepad_Action_MoveFB&");
        Action(_ACTION_STRAFE_RIGHT,                "&MenuGamepad_Action_MoveLR&");
        Action(_ACTION_ROTATE_RIGHT,                "&MenuGamepad_Action_LookLR&");
        Action(_ACTION_ROTATE_UP,                   "&MenuGamepad_Action_LookUD&");
        Action(_ACTION_JUMP,                        "&MenuGamepad_Action_Jump&");
        Action(_ACTION_DUCK_TOGGLE,                 "&MenuGamepad_Action_Crouch&");
        Action(_ACTION_SPRINT_TOGGLE,               "&MenuGamepad_Action_Sprint&");
        Action(_ACTION_POUNCE,                      "&BtZ_TutN_PounceAttack_5&");
        Action(_ACTION_PLAYERZOMBIE_MELEE,          "&BtZ_TutN_ClawAttack_6&");
        Action(_ACTION_ROPE_THROW,                  "&BtZ_TutN_HunterDeath_Locomotion_3&");
        Action(_ACTION_INGAME_MENU,                 "&MenuGamepad_Action_InGameMenu&");
        Action(_ACTION_INVENTORY,                   "&MenuGamepad_Action_GameMenu&");
        Action(_ACTION_SPIT_CONTROL_THE_HORDE,      "&BtZ_TutN_HordeSummoner_14&");
        Action(_ACTION_SPIT_LIGHT_DISABLE,          "&TutN_BtZLightDisable&");	
        Action(_ACTION_ZOMBIE_THROW_SPIT,           "&TutN_BTZZombieSpits&");
        Action(_ACTION_ZOMBIE_HOWL,                 "&TutN_BTZZombieHowl&"); 
        Action(_ACTION_ZOMBIE_GROUND_POUND,         "&Skill_GroundPound&");
        Action(_ACTION_CANCEL_CHARGING,             "&MenuCancel&");
        Action(_ACTION_SPIT_DEFENSIVE_SMOKE,        "&btz_defensive_smoke_spit_name&"); 
        Action(_ACTION_ZOMBIE_EXECUTE_TRIGGER2,     "&MenuGamepad_Action_Use&");
    }   

    View("&MenuGamepad_View_Buggy&", "DLC17")
    {
        Layout("buggy_buttons_layout",              "&MenuGamepad_Layout_Buttons_$&");
        Layout("buggy_buttons2_layout",             "&MenuGamepad_Layout_Buttons_$&");
        Layout("buggy_triggers_layout",             "&MenuGamepad_Layout_Trigger_$&");
        Layout("stick_layout",                      "&MenuGamepad_Layout_Sticks_$&");
        
        Action(_ACTION_TURN_VEHICLE_LEFT,           "&MenuGamepad_Action_VehicleTurn&");
        Action(_ACTION_THROTTLE,                    "&MenuGamepad_Action_VehicleAccelerate&");
        Action(_ACTION_BRAKE,                       "&MenuGamepad_Action_VehicleBrake&");
        Action(_ACTION_HANDBRAKE,                   "&MenuGamepad_Action_VehicleHandBrake&");
        Action(_ACTION_CAR_LIGHTS_TOGGLE,           "&MenuGamepad_Action_VehicleLights&");    
        Action(_ACTION_VEHICLE_LEAVE,               "&MenuGamepad_Action_VehicleLeave&");
        Action(_ACTION_BUGGY_SKILL_0,               "&MenuGamepad_Action_VehicleSkill0&");
        Action(_ACTION_BUGGY_SKILL_1,               "&MenuGamepad_Action_VehicleSkill1&");
        Action(_ACTION_BUGGY_SKILL_2,               "&MenuGamepad_Action_VehicleSkill2&");
        //Action(_ACTION_HORN,                        "&MenuGamepad_Action_VehicleHorn&");
        Action(_ACTION_VEHICLE_LOOKBACK,            "&MenuGamepad_Action_VehicleLookBack&");
        
        Action(_ACTION_INVENTORY,                   "&MenuGamepad_Action_GameMenu&");                
        Action(_ACTION_INGAME_MENU,                 "&MenuGamepad_Action_InGameMenu&");
        Action(_ACTION_BACKWARD,                    "&MenuGamepad_Action_VehicleLean&");
        Action(_ACTION_ROTATE_RIGHT,                "&MenuGamepad_Action_LookLR&");
        Action(_ACTION_ROTATE_UP,                   "&MenuGamepad_Action_LookUD&");
        Action(_ACTION_VEHICLE_HEAL,                "&MenuGamepad_Action_Heal&");
        Action(_ACTION_VEHICLE_SONAR_IMPULSE,       "&MenuGamepad_Action_NightSense&");
    }
}
