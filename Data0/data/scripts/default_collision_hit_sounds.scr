import "surface_id.def"
import "collision_effect_weight.def"

export int AnySurfaceId    	            = SurfaceId_Count;
export int AnyCollisionEffectWeight     = CollisionEffectWeight_Count;

sub ParamsInfo()
{
    AnyParamValue(AnySurfaceId);
    AnyParamValue(AnySurfaceId);
    AnyParamValue(AnyCollisionEffectWeight);
}

// poniewaz dzwieki sa identyczne dla danej pary, przyjalem zalozenie ze kazda para surface id wystepuje tylko raz 
// i pierwsze id jest mniejsze od drugiego, przy okazji powierzchnie sa ulozone wzgledem miekkosci i powinien odgrywac
// sie dzwiek dla powierzchni bardziej miekkiej, zatem mamy zalatwione dwie rzeczy za jednym zamachem
sub Datas()
{
	Data(SurfaceId_Water, AnySurfaceId, CollisionEffectWeight_Light, "hit_water_XX.wav");
	Data(SurfaceId_Water, AnySurfaceId, CollisionEffectWeight_Heavy, "hit_big_water_XX.wav");
    Data(SurfaceId_Snow, AnySurfaceId, CollisionEffectWeight_Light, "hit_snow_XX.wav");
	Data(SurfaceId_Snow, AnySurfaceId, CollisionEffectWeight_Heavy, "hit_big_snow_XX.wav");
    Data(SurfaceId_Sand, AnySurfaceId, CollisionEffectWeight_Light, "hit_ground_XX.wav");
	Data(SurfaceId_Sand, AnySurfaceId, CollisionEffectWeight_Heavy, "hit_big_ground_XX.wav");
    Data(SurfaceId_Gravel, AnySurfaceId, CollisionEffectWeight_Light, "hit_ground_XX.wav");
	Data(SurfaceId_Gravel, AnySurfaceId, CollisionEffectWeight_Heavy, "hit_big_ground_XX.wav");
    Data(SurfaceId_Grass, AnySurfaceId, CollisionEffectWeight_Light, "hit_grass_XX.wav");
	Data(SurfaceId_Grass, AnySurfaceId, CollisionEffectWeight_Heavy, "hit_big_grass_XX.wav");
    Data(SurfaceId_Ground, AnySurfaceId, CollisionEffectWeight_Light, "hit_ground_XX.wav");
	Data(SurfaceId_Ground, AnySurfaceId, CollisionEffectWeight_Heavy, "hit_big_ground_XX.wav");
    Data(SurfaceId_Mud, AnySurfaceId, CollisionEffectWeight_Light, "hit_mud_XX.wav");
	Data(SurfaceId_Mud, AnySurfaceId, CollisionEffectWeight_Heavy, "hit_big_mud_XX.wav");
    Data(SurfaceId_Flesh, AnySurfaceId, CollisionEffectWeight_Light, "hit_flesh_XX.wav");
	Data(SurfaceId_Flesh, AnySurfaceId, CollisionEffectWeight_Heavy, "hit_big_flesh_XX.wav");
    Data(SurfaceId_Rubber, AnySurfaceId, CollisionEffectWeight_Light, "hit_rubber_XX.wav");
	Data(SurfaceId_Rubber, AnySurfaceId, CollisionEffectWeight_Heavy, "hit_big_rubber_XX.wav");
    Data(SurfaceId_Wood, AnySurfaceId, CollisionEffectWeight_Light, "hit_wood_XX.wav");
	Data(SurfaceId_Wood, AnySurfaceId, CollisionEffectWeight_Heavy, "hit_big_wood_XX.wav");
    Data(SurfaceId_Plastic, AnySurfaceId, CollisionEffectWeight_Light, "hit_plastic_XX.wav");
	Data(SurfaceId_Plastic, AnySurfaceId, CollisionEffectWeight_Heavy, "hit_big_plastic_XX.wav");
    Data(SurfaceId_Tarmac, AnySurfaceId, CollisionEffectWeight_Light, "hit_stone_XX.wav");
	Data(SurfaceId_Tarmac, AnySurfaceId, CollisionEffectWeight_Heavy, "hit_big_stone_XX.wav");
    Data(SurfaceId_Glass, AnySurfaceId, CollisionEffectWeight_Light, "hit_glass_XX.wav");
	Data(SurfaceId_Glass, AnySurfaceId, CollisionEffectWeight_Heavy, "hit_big_glass_XX.wav");
    Data(SurfaceId_Ice, AnySurfaceId, CollisionEffectWeight_Light, "hit_glass_XX.wav");
	Data(SurfaceId_Ice, AnySurfaceId, CollisionEffectWeight_Heavy, "hit_big_glass_XX.wav");
    Data(SurfaceId_Metal, AnySurfaceId, CollisionEffectWeight_Light, "hit_metal_XX.wav");
	Data(SurfaceId_Metal, AnySurfaceId, CollisionEffectWeight_Heavy, "hit_big_metal_XX.wav");
    Data(SurfaceId_Stone, AnySurfaceId, CollisionEffectWeight_Light, "hit_stone_XX.wav");
	Data(SurfaceId_Stone, AnySurfaceId, CollisionEffectWeight_Heavy, "hit_big_stone_XX.wav");
    Data(AnySurfaceId, AnySurfaceId, AnyCollisionEffectWeight, "default_XX.wav");
}
