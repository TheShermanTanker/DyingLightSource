import "inventorystuff.scr" 
sub main() 
{
    Item("Melee_ShortSwordCNighthunter", CategoryType_Melee)
    {
        Name("&Melee_ShortSwordCNighthunter_N&");
        GameVersion(11);
        Visibility(true);
        ItemType(ItemType_TwoHandedCloseStick);
        PhysicsScript("single_dropped_inventory.phx");
        UpgradeLevel(0);
        Condition(35);
        CriticalCondition(11);
        Damage(247.0);
        Force(35.0);
        CriticalProb(0.0);
        CriticalDamage(2.0);
        DamageRange(160.0 *0.01);
        DamageToPhysicsObjects(50.0);
        PhysicsDamageMul(1.0);
        StaminaUsage(0.16);
        ConfusionProb(0.0);
        HeadSmashProb(0.0);
        HeadCutProb(1.0);
        ArmsCutProb(1.0);
        LegsCutProb(1.0);
        WeaponBuildType(WeaponBuildType_Metal);
        DamageType(DamageType_Cut);
        CutTypesGroup(CutTypesGroup_SharpHeavy);
        Flags(1);
        InventoryMeshHq("wn_short_sword_c.msh");
        InventoryMesh("wn_short_sword_c.msh");
        Mesh("wn_short_sword_c.msh");
        Skin("Nighthunter");
        SkinTag("Weapon_Craft0");
        AnimPrefix("Stick2Close");
        HudIcon("weapon_night_katana");
        MinHitSeverity(HitSeverity_Light);
        MaxHitSeverity(HitSeverity_Medium);
        HorizontalAttackDamageMul(1.0);
        TwoHanded(false);
        HolderElement("r_thigh");
        HolderOffset([0.0,10.0,10.0] *[0.01, 0.01, 0.01]);
        HolderAngle([0.0,0.0,-90.0]);
        DestroySound("damaged_sharp_weapon_XX.wav");
        AiHitSound("machete");
        use HitEffects_Sharp();
        use PickupSounds_Default();
        DamageSize(4.0);
        StatsType(StatsType_Cut);
        FF_EffectName("Hit_Sharp");
        FF_Left(0.6);
        FF_Right(0.6);
        FF_Duration(0.2);
        FF_FadeOut(0.0);
        Reparable(true);
        RepairTags("Weapon_Craft4");
        RepairPart("Craft_MetalScrap", 1);
        AllowedRepairs(3);
        SoundDamagedHit("damaged_sharp_weapon_XX.wav");
        ThrowBeginSound("machete_throw.wav");
        Color(Color_White);
        GenLevelMin(1);
        GenLevelMax(1);
        AchType(AchType_Machete);
        DismantleResultItem("Craft_MetalScrap");
        DismantleResultItemCnt(1);
        CraftingSlots(1,0);
        UniqueFxNameBase("shortswordcnighthunter");
        RestrictionFlags(0);
        RagdollBehaviorPrefix("StickSharp");
        HandInertiaFactor(1.8);
        Price(2500);
        GenType(GenType_MeleeWeapon);
        DeveloperEffect("ExplosionLightOnHit");
    }

    Item("Melee_ShortSwordCNighthunter", CategoryType_Melee)
    {
        GameVersion(11);
        UpgradeLevel(0);
        Condition(28);
        CriticalProb(0.0);
        DamageType(DamageType_Cut);
        CutTypesGroup(CutTypesGroup_SharpHeavy);
        InventoryMeshHq("wn_short_sword_c_dm_a.msh");
        RepairPart("Craft_MetalScrap", 1);
    }

    Item("Melee_ShortSwordCNighthunter", CategoryType_Melee)
    {
        GameVersion(11);
        UpgradeLevel(0);
        Condition(11);
        CriticalProb(0.0);
        DamageType(DamageType_Cut);
        CutTypesGroup(CutTypesGroup_SharpHeavy);
        InventoryMeshHq("wn_short_sword_c_dm_b.msh");
        RepairPart("Craft_MetalScrap", 1);
    }

    Item("Melee_KnifeBNighthunter", CategoryType_Melee)
    {
        Name("&Melee_KnifeBNighthunter_N&");
        GameVersion(11);
        Visibility(true);
        ItemType(ItemType_Knife);
        PhysicsScript("single_dropped_inventory.phx");
        UpgradeLevel(0);
        Condition(40);
        CriticalCondition(12);
        Damage(48.0);
        Force(10.0);
        CriticalProb(0.0);
        CriticalDamage(2.0);
        DamageRange(145.0 *0.01);
        DamageToPhysicsObjects(20.0);
        PhysicsDamageMul(1.0);
        StaminaUsage(0.11);
        ConfusionProb(0.0);
        HeadSmashProb(0.0);
        HeadCutProb(0.0);
        ArmsCutProb(0.0);
        LegsCutProb(0.0);
        WeaponBuildType(WeaponBuildType_Metal);
        DamageType(DamageType_Cut);
        Flags(3);
        InventoryMeshHq("wn_long_knife_b.msh");
        InventoryMesh("wn_long_knife_b.msh");
        Mesh("wn_long_knife_b.msh");
        Skin("Nighthunter");
        SkinTag("Weapon_Craft0");
        AnimPrefix("Knife");
        HudIcon("weapon_night_knife");
        MinHitSeverity(HitSeverity_Light);
        MaxHitSeverity(HitSeverity_Light);
        HorizontalAttackDamageMul(1.0);
        TwoHanded(false);
        HolderElement("r_thigh");
        HolderOffset([0.0,10.0,10.0] *[0.01, 0.01, 0.01]);
        HolderAngle([0.0,0.0,-90.0]);
        DestroySound("damaged_sharp_weapon_XX.wav");
        AiHitSound("knife");
        use HitEffects_Sharp();
        use PickupSounds_Default();
        DamageSize(1.0);
        StatsType(StatsType_Cut);
        FF_EffectName("Hit_Knife");
        FF_Left(0.6);
        FF_Right(0.6);
        FF_Duration(0.2);
        FF_FadeOut(0.0);
        Reparable(true);
        RepairTags("Weapon_Craft4");
        RepairPart("Craft_MetalScrap", 1);
        AllowedRepairs(3);
        SoundDamagedHit("damaged_sharp_weapon_XX.wav");
        ThrowBeginSound("knife_throw.wav");
        Color(Color_White);
        GenLevelMin(1);
        GenLevelMax(1);
        AchType(AchType_Machete);
        DismantleResultItem("Craft_MetalScrap");
        DismantleResultItemCnt(1);
        CraftingSlots(1,0);
        UniqueFxNameBase("knifebnighthunter");
        RestrictionFlags(0);
        RagdollBehaviorPrefix("Knife");
        HandInertiaFactor(1.8);
        Price(2500);
        GenType(GenType_MeleeWeapon);
        DeveloperEffect("ExplosionLightOnHit");
    }

    Item("Melee_KnifeBNighthunter", CategoryType_Melee)
    {
        GameVersion(11);
        UpgradeLevel(0);
        Condition(32);
        CriticalProb(0.0);
        DamageType(DamageType_Cut);
        InventoryMeshHq("wn_long_knife_b_dm_a.msh");
        RepairPart("Craft_MetalScrap", 1);
    }

    Item("Melee_KnifeBNighthunter", CategoryType_Melee)
    {
        GameVersion(11);
        UpgradeLevel(0);
        Condition(12);
        CriticalProb(0.0);
        DamageType(DamageType_Cut);
        InventoryMeshHq("wn_long_knife_b_dm_b.msh");
        RepairPart("Craft_MetalScrap", 1);
    }

    Item("Melee_BatonANighthunter", CategoryType_Melee)
    {
        Name("&Melee_BatonANighthunter_N&");
        GameVersion(11);
        Visibility(true);
        ItemType(ItemType_Stick);
        PhysicsScript("single_dropped_inventory.phx");
        UpgradeLevel(0);
        Condition(35);
        CriticalCondition(11);
        Damage(88.0);
        Force(25.0);
        CriticalProb(0.0);
        CriticalDamage(2.0);
        DamageRange(150.0 *0.01);
        DamageToPhysicsObjects(35.0);
        PhysicsDamageMul(1.0);
        StaminaUsage(0.19);
        ConfusionProb(0.0);
        HeadSmashProb(1.0);
        HeadCutProb(0.0);
        ArmsCutProb(0.0);
        LegsCutProb(0.0);
        WeaponBuildType(WeaponBuildType_Universal);
        DamageType(DamageType_Blunt);
        CutTypesGroup(CutTypesGroup_Holes);
        Flags(3);
        InventoryMeshHq("wn_batton_a.msh");
        InventoryMesh("wn_batton_a.msh");
        Mesh("wn_batton_a.msh");
        Skin("Nighthunter");
        SkinTag("Weapon_Craft0");
        AnimPrefix("Stick");
        HudIcon("weapon_night_batton");
        MinHitSeverity(HitSeverity_Light);
        MaxHitSeverity(HitSeverity_Medium);
        HorizontalAttackDamageMul(1.0);
        TwoHanded(false);
        HolderElement("r_thigh");
        HolderOffset([0.0,10.0,10.0] *[0.01, 0.01, 0.01]);
        HolderAngle([0.0,0.0,-90.0]);
        DestroySound("damaged_sharp_weapon_XX.wav");
        AiHitSound("hammer");
        use HitEffects_Default();
        use PickupSounds_Default();
        DamageSize(2.0);
        StatsType(StatsType_Cut);
        FF_EffectName("Hit_Blunt");
        FF_Left(0.6);
        FF_Right(0.6);
        FF_Duration(0.2);
        FF_FadeOut(0.0);
        Reparable(true);
        RepairTags("Weapon_Craft4");
        RepairPart("Craft_MetalScrap", 1);
        AllowedRepairs(3);
        SoundDamagedHit("damaged_sharp_weapon_XX.wav");
        ThrowBeginSound("weapon_light_throw.wav");
        Color(Color_White);
        GenLevelMin(1);
        GenLevelMax(1);
        AchType(AchType_Machete);
        DismantleResultItem("Craft_MetalScrap");
        DismantleResultItemCnt(1);
        CraftingSlots(1,0);
        UniqueFxNameBase("batonanighthunter");
        RestrictionFlags(0);
        RagdollBehaviorPrefix("StickBlunt");
        HandInertiaFactor(1.8);
        Price(2500);
        GenType(GenType_MeleeWeapon);
        DeveloperEffect("ExplosionLightOnHit");
    }

    Item("Melee_BatonANighthunter", CategoryType_Melee)
    {
        GameVersion(11);
        UpgradeLevel(0);
        Condition(28);
        CriticalProb(0.0);
        DamageType(DamageType_Blunt);
        CutTypesGroup(CutTypesGroup_Holes);
        InventoryMeshHq("wn_batton_a_dm_a.msh");
        RepairPart("Craft_MetalScrap", 1);
    }

    Item("Melee_BatonANighthunter", CategoryType_Melee)
    {
        GameVersion(11);
        UpgradeLevel(0);
        Condition(11);
        CriticalProb(0.0);
        DamageType(DamageType_Blunt);
        CutTypesGroup(CutTypesGroup_Holes);
        InventoryMeshHq("wn_batton_a_dm_b.msh");
        RepairPart("Craft_MetalScrap", 1);
    }

    Item("Melee_BigHammerANighthunter", CategoryType_Melee)
    {
        Name("&Melee_BigHammerANighthunter_N&");
        GameVersion(11);
        Visibility(true);
        ItemType(ItemType_TwoHandedHeavyStick);
        PhysicsScript("single_dropped_inventory.phx");
        UpgradeLevel(0);
        Condition(35);
        CriticalCondition(11);
        Damage(118.0);
        Force(100.0);
        CriticalProb(0.0);
        CriticalDamage(2.0);
        DamageRange(195.0 *0.01);
        DamageToPhysicsObjects(70.0);
        PhysicsDamageMul(1.0);
        StaminaUsage(0.33);
        ConfusionProb(0.0);
        HeadSmashProb(1.0);
        HeadCutProb(0.0);
        ArmsCutProb(0.0);
        LegsCutProb(0.0);
        WeaponBuildType(WeaponBuildType_Universal);
        DamageType(DamageType_Blunt);
        CutTypesGroup(CutTypesGroup_Holes);
        Flags(1);
        InventoryMeshHq("wn_hammer_big_a.msh");
        InventoryMesh("wn_hammer_big_a.msh");
        Mesh("wn_hammer_big_a.msh");
        Skin("Nighthunter");
        SkinTag("Weapon_Craft0");
        AnimPrefix("Stick2Heavy");
        HudIcon("weapon_night_sledgehammer");
        MinHitSeverity(HitSeverity_Heavy);
        MaxHitSeverity(HitSeverity_Heavy);
        HorizontalAttackDamageMul(3.0);
        TwoHanded(true);
        DestroySound("damaged_heavy_weapon_XX.wav");
        AiHitSound("hammer_heavy");
        use HitEffects_Default();
        use PickupSounds_Default();
        DamageSize(5.0);
        StatsType(StatsType_Blunt);
        FF_EffectName("Hit_Stick2HeavyBlunt");
        FF_Left(0.6);
        FF_Right(0.6);
        FF_Duration(0.2);
        FF_FadeOut(0.0);
        Reparable(true);
        RepairTags("Weapon_Craft4");
        RepairPart("Craft_MetalScrap", 1);
        AllowedRepairs(3);
        SoundDamagedHit("damaged_sharp_weapon_XX.wav");
        ThrowBeginSound("weapon_heavy_throw.wav");
        Color(Color_White);
        GenLevelMin(1);
        GenLevelMax(1);
        AchType(AchType_BigHammer);
        DismantleResultItem("Craft_MetalScrap");
        DismantleResultItemCnt(2);
        CraftingSlots(1,0);
        UniqueFxNameBase("hammer_big_a");
        RestrictionFlags(0);
        RagdollBehaviorPrefix("Stick2HeavyBlunt");
        HandInertiaFactor(1.8);
        HandInertiaRotFactor([0.5, 1.0, 4.0]);
        Price(2500);
        GenType(GenType_MeleeWeapon);
        DeveloperEffect("ExplosionLightOnHit");
    }

    Item("Melee_BigHammerANighthunter", CategoryType_Melee)
    {
        GameVersion(11);
        UpgradeLevel(0);
        Condition(28);
        CriticalProb(0.0);
        DamageType(DamageType_Blunt);
        CutTypesGroup(CutTypesGroup_Holes);
        InventoryMeshHq("wn_hammer_big_a_dm_a.msh");
        RepairPart("Craft_MetalScrap", 1);
    }

    Item("Melee_BigHammerANighthunter", CategoryType_Melee)
    {
        GameVersion(11);
		UpgradeLevel(0);
        Condition(11);
        CriticalProb(0.0);
        DamageType(DamageType_Blunt);
        CutTypesGroup(CutTypesGroup_Holes);
        InventoryMeshHq("wn_hammer_big_a_dm_b.msh");
        RepairPart("Craft_MetalScrap", 1);
    }

}