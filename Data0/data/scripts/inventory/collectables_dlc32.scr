import "inventorystuff.scr" 
sub main() 
{
    Item("Craftplan_ShortSwordCNighthunter", CategoryType_Collectable)
    {
        Name("&Craftplan_ShortSwordCNighthunter_N&");
        Description('&Craftplan_ShortSwordCNighthunter_D&');
        ItemType(ItemType_CraftPlan);
        Price(6400);
        Mesh("blueprint.msh");
        Skin("default");
        BaseItem("Melee_ShortSword", "", "");
        BaseItem("Melee_LongSword", "", "");
        BaseItem("Melee_Khopesh", "", "");
        BaseItem("Melee_Machete", "", "");
        BaseItem("Melee_Handsaw", "", "");
        BaseItem("Melee_Scythe", "", "");
        RequiredItem("Craft_MetalScrap", 2);
        RequiredItem("Craft_Bleach", 2);
        RequiredItem("Craft_Electronics", 1);
        Elemental(Elemental_ShockElectricity, 2);
        Elemental(Elemental_Burning, 2);
        Color(Color_Orange);
        CraftedItem("Melee_ShortSwordCNighthunter", 1, 1);
        CraftplanType("Weapon");
        UniqueSaveID(3074);
        HudIcon("blueprint_b");
        GameVersion(11);
        InheritBaseStats();
        OwnedAtStart();
    }

    Item("Craftplan_KnifeBNighthunter", CategoryType_Collectable)
    {
        Name("&Craftplan_KnifeBNighthunter_N&");
        Description('&Craftplan_KnifeBNighthunter_D&');
        ItemType(ItemType_CraftPlan);
        Price(6400);
        Mesh("blueprint.msh");
        Skin("default");
        BaseItem("Melee_Knife", "", "");
        BaseItem("Melee_ShortKnife", "", "");
        BaseItem("Melee_Cleaver", "", "");
        BaseItem("Melee_ReedKnife", "", "");
        BaseItem("Melee_Sickle", "", "");
        RequiredItem("Craft_MetalScrap", 2);
        RequiredItem("Craft_Bleach", 2);
        RequiredItem("Craft_Electronics", 1);
        Elemental(Elemental_ShockElectricity, 2);
        Elemental(Elemental_Burning, 2);
        Color(Color_Orange);
        CraftedItem("Melee_KnifeBNighthunter", 1, 1);
        CraftplanType("Weapon");
        UniqueSaveID(3076);
        HudIcon("blueprint_b");
        GameVersion(11);
        InheritBaseStats();
        OwnedAtStart();
    }

    Item("Craftplan_BatonANighthunter", CategoryType_Collectable)
    {
        Name("&Craftplan_BatonANighthunter_N&");
        Description('&Craftplan_BatonANighthunter_D&');
        ItemType(ItemType_CraftPlan);
        Price(6400);
        Mesh("blueprint.msh");
        Skin("default");
        BaseItem("Melee_Baton", "", "");
        BaseItem("Melee_Crowbar", "", "");
        BaseItem("Melee_Wrench", "", "");
        BaseItem("Melee_Hammer", "", "");
        BaseItem("Melee_MilitaryShovel", "", "");
        BaseItem("Melee_Baseball", "", "");
        BaseItem("Melee_ShortAxe", "", "");
        BaseItem("Melee_Pick", "", "");
        RequiredItem("Craft_MetalScrap", 2);
        RequiredItem("Craft_Bleach", 2);
        RequiredItem("Craft_Electronics", 1);
        Elemental(Elemental_ShockElectricity, 2);
        Elemental(Elemental_Burning, 2);
        Color(Color_Orange);
        CraftedItem("Melee_BatonANighthunter", 1, 1);
        CraftplanType("Weapon");
        UniqueSaveID(3077);
        HudIcon("blueprint_b");
        GameVersion(11);
        InheritBaseStats();
        OwnedAtStart();
    }

    Item("Craftplan_BigHammerANighthunter", CategoryType_Collectable)
    {
        Name("&Craftplan_BigHammerANighthunter_N&");
        Description('&Craftplan_BigHammerANighthunter_D&');
        ItemType(ItemType_CraftPlan);
        Price(6400);
        Mesh("blueprint.msh");
        Skin("default");
        BaseItem("Melee_BigHammer", "", "");
        BaseItem("Melee_AxeBig", "", "");
        BaseItem("Melee_Pickaxe", "", "");
        RequiredItem("Craft_MetalScrap", 2);
        RequiredItem("Craft_Bleach", 2);
        RequiredItem("Craft_Electronics", 1);
        Elemental(Elemental_ShockElectricity, 2);
        Elemental(Elemental_Burning, 2);
        Color(Color_Orange);
        CraftedItem("Melee_BigHammerANighthunter", 1, 1);
        CraftplanType("Weapon");
        UniqueSaveID(3078);
        HudIcon("blueprint_b");
        GameVersion(11);
        InheritBaseStats();
        OwnedAtStart();
    }
}