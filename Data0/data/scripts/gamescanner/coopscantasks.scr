export int ScanAllGames                 = 0;
export int ScanFriendsGames             = 1;

// Connectivity test - must match FConnectivityTest enum.
export int NoTest                   = 0;
export int LatencyTest              = 1;
export int ConnectionTest           = 2;

// FConnectivityTest flags combinations.
export int LatencyAndConnectionTest = 3;

// Task(area, tracked_progress, progress_min, progress_max, game_type)

sub main()
{
	Params()
	{
		ScanInterval(60);
		RefreshInterval(20);
		MaxResults(25);
	}

	Tasks()
	{
		Task    (DlcRange_Current, DlcRange_Current, ProgressVal_Undefined          , ProgressVal_Undefined)
		{
			Task(DlcRange_Inherit, DlcRange_Inherit, ProgressVal_TrackedMyExact     , ProgressVal_TrackedMyExact     , ScanAllGames, "&SearchInfo_MatchExact&", LatencyAndConnectionTest);
			Task(DlcRange_Inherit, DlcRange_Inherit, ProgressVal_TrackedMyChapterMin, ProgressVal_TrackedMyExact     , ScanAllGames, "&SearchInfo_MatchGood&", LatencyAndConnectionTest);
			Task(DlcRange_Inherit, DlcRange_Inherit, ProgressVal_TrackedMin         , ProgressVal_TrackedMyChapterMin, ScanAllGames, "&SearchInfo_MatchOther&", LatencyAndConnectionTest);
		}

		Task    (DlcRange_Current, DlcRange_All    , ProgressVal_Undefined          , ProgressVal_Undefined)
		{
			Task(DlcRange_Inherit, DlcRange_Inherit, ProgressVal_TrackedMyExact     , ProgressVal_TrackedMyExact     , ScanAllGames, "&SearchInfo_MatchOther&", LatencyAndConnectionTest);
			Task(DlcRange_Inherit, DlcRange_Inherit, ProgressVal_TrackedMyChapterMin, ProgressVal_TrackedMyExact     , ScanAllGames, "&SearchInfo_MatchOther&", LatencyAndConnectionTest);
			Task(DlcRange_Inherit, DlcRange_Inherit, ProgressVal_TrackedMin         , ProgressVal_TrackedMyChapterMin, ScanAllGames, "&SearchInfo_MatchOther&", LatencyAndConnectionTest);
		}

		Task(DlcRange_All, DlcRange_Area, ProgressVal_TrackedMyExact     , ProgressVal_TrackedMyExact     , ScanAllGames    , "&SearchInfo_MatchExact&", LatencyAndConnectionTest);
		Task(DlcRange_All, DlcRange_Area, ProgressVal_TrackedMyChapterMin, ProgressVal_TrackedMyExact     , ScanAllGames    , "&SearchInfo_MatchGood&", LatencyAndConnectionTest);
		Task(DlcRange_All, DlcRange_Area, ProgressVal_TrackedMin         , ProgressVal_TrackedMyChapterMin, ScanAllGames    , "&SearchInfo_MatchOther&", LatencyAndConnectionTest);
		
		Task(DlcRange_All, DlcRange_Area, ProgressVal_TrackedMin         , ProgressVal_TrackedMyExact     , ScanFriendsGames, "&SearchInfo_MatchFriends&", LatencyAndConnectionTest);
	}
}