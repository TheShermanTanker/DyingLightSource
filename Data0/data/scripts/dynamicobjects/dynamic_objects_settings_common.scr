import "dynamic_objects_syntax.def"
import "dynamic_objects_containers.scr"

sub default()
{
    use DeclareMeshSkins(mesh = "sun_blinds_b.msh",          skin = "Dynamic", class = "MpcObject", mesh_replacement = "sun_blinds_b_anm.msh",           reason = DYNOBJ_REASON_ALL);
    use DeclareMeshSkins(mesh = "sun_blinds_c.msh",          skin = "Dynamic", class = "MpcObject", mesh_replacement = "sun_blinds_c_anm.msh",           reason = DYNOBJ_REASON_ALL);
    use DeclareMeshSkins(mesh = "sun_blinds_b_no_frame.msh", skin = "Dynamic", class = "MpcObject", mesh_replacement = "sun_blinds_b_no_frame_anm.msh",  reason = DYNOBJ_REASON_ALL);
    use DeclareMeshSkins(mesh = "sun_blinds_c_no_frame.msh", skin = "Dynamic", class = "MpcObject", mesh_replacement = "sun_blinds_c_no_frame_anm.msh",  reason = DYNOBJ_REASON_ALL);
    use DeclareMeshSkins(mesh = "sun_blinds_d_no_frame.msh", skin = "Dynamic", class = "MpcObject", mesh_replacement = "sun_blinds_d_no_frame_anm.msh",  reason = DYNOBJ_REASON_ALL);

	use DeclareChunk(mesh = "anim_flag_a.msh", skin = "flag_b",                     reason = DYNOBJ_REASON_SHOT);
	
    use DeclareMeshClimbingPole(mesh = "lamp_street_nm.msh");


    use DeclareMeshClimbingPole(mesh = "pole_climb_a.msh");
    use DeclareWithPreset(mesh = "pole_climb_a.msh", skin = "Default_top_limited_1", class = "LadderDI", preset = "Type;PipeRung1", reason = DYNOBJ_REASON_ALL_NO_AI);
    use DeclareWithPreset(mesh = "pole_climb_a.msh", skin = "Default_top_limited_2", class = "LadderDI", preset = "Type;PipeRung2", reason = DYNOBJ_REASON_ALL_NO_AI);
    use DeclareWithPreset(mesh = "pole_climb_a.msh", skin = "Concrete_top_limited_1", class = "LadderDI", preset = "Type;PipeRung1", reason = DYNOBJ_REASON_ALL_NO_AI);
	use DeclareWithPreset(mesh = "pole_climb_a.msh", skin = "Concrete_top_limited_2", class = "LadderDI", preset = "Type;PipeRung2", reason = DYNOBJ_REASON_ALL_NO_AI);
	use DeclareWithPreset(mesh = "pole_climb_a.msh", skin = "Metal_top_limited_1", class = "LadderDI", preset = "Type;PipeRung1", reason = DYNOBJ_REASON_ALL_NO_AI);
	use DeclareWithPreset(mesh = "pole_climb_a.msh", skin = "Metal_top_limited_2", class = "LadderDI", preset = "Type;PipeRung2", reason = DYNOBJ_REASON_ALL_NO_AI);

    use DeclareMeshLadderExclude(mesh = "pole_climb_a.msh", skin = "Default_No_Climb");
    use DeclareMeshLadderExclude(mesh = "pole_climb_a.msh", skin = "Metal_No_Climb");
    use DeclareMeshLadderExclude(mesh = "pole_climb_a.msh", skin = "Concrete_No_Climb");


    use DeclareMeshClimbingPole(mesh = "halogen_lamp_pole.msh");
    use DeclareMeshLadderExclude(mesh = "halogen_lamp_pole.msh", skin = "Default_No_Climb");
    //use DeclareMeshClimbingPole(mesh = "lamp_street_a.msh");
	use DeclareWithPreset(mesh = "lamp_street_a.msh", skin = "Default_top_limited_1", class = "LadderDI", preset = "Type;PipeRung1", reason = DYNOBJ_REASON_ALL_NO_AI);
	use DeclareWithPreset(mesh = "halogen_lamp_pole.msh", skin = "Default", class = "LadderDI", preset = "Type;PipeRung1", reason = DYNOBJ_REASON_ALL_NO_AI);
    use DeclareMeshLadderExclude(mesh = "lamp_street_a.msh", skin = "Default_No_Climb");
    //use DeclareMeshClimbingPole(mesh = "flag_pole_a.msh");
    use DeclareMeshLadder(mesh = "ladder_c.msh");
    use DeclareMeshLadder(mesh = "ladder_c_wood.msh");
    use DeclareMeshLadder(mesh = "ladder_d.msh");
    use DeclareMeshLadder(mesh = "scaffolding_system_ladder.msh");
    use DeclareMeshLadderExclude(mesh = "scaffolding_system_ladder.msh", skin = "No_Climb");
    use DeclareMeshLadder(mesh = "hatch_ladder_a.msh");
    use DeclareMeshLadder(mesh = "t2_lift_ladder_3m.msh"); 

    //use DeclareMeshClimbingPole(mesh = "ot_street_lamp_a.msh");
    //use DeclareMeshClimbingPole(mesh = "ot_street_lamp_c.msh");

    use DeclareMeshSpikes(mesh = "trap_spikes_a.msh");
	use DeclareMeshSpikes(mesh = "trap_spikes_b.msh");
	use DeclareMeshSpikes(mesh = "window_grating_a_spike.msh");
	use DeclareMeshSpikes(mesh = "slums_spike_trap_a.msh");
    use DeclareMeshSpikes(mesh = "pursuit_rebar_a.msh");
	use DeclareMeshSpikes(mesh = "trap_pillar_spikes_a.msh");
	use DeclareMeshSpikes(mesh = "fence_quarantine_obstacle_a.msh");

	use DeclareDestroyablePhysics(mesh = "atm_a.msh", 		skin = "Old_dynamic",  		reason = DYNOBJ_REASON_ALL);
	use DeclarePhysics(mesh = "ve_sedan_c.msh",         	skin = "Burned",          	reason = DYNOBJ_REASON_ALL);
    use DeclarePhysics(mesh = "soccerball_a.msh",                                   	reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareDestroyablePhysics(mesh = "barrel_c.msh",    skin = "Dynamic",       	reason = DYNOBJ_REASON_COLLISION_VEHICLE);   
	use DeclarePhysics(mesh = "barrel_b.msh",     			skin = "Dynamic",         	reason = DYNOBJ_REASON_ALL);
    use DeclarePhysics(mesh = "barrel_a.msh",       		skin = "Dynamic",          	reason = DYNOBJ_REASON_ALL);
    //use DeclarePhysics(mesh = "carton_box_c.msh",       	skin = "Dynamic",        	reason = DYNOBJ_REASON_ALL);
    //use DeclarePhysics(mesh = "carton_box_b.msh",       	skin = "Dynamic",        	reason = DYNOBJ_REASON_ALL);
    //use DeclarePhysics(mesh = "carton_box_a.msh",       	skin = "Dynamic",       	reason = DYNOBJ_REASON_ALL);
    //use DeclarePhysics(mesh = "carton_box_e.msh",       	skin = "Dynamic",         	reason = DYNOBJ_REASON_ALL);use DeclarePhysics(mesh = "carton_box_c.msh",       	skin = "Dynamic",        	reason = DYNOBJ_REASON_ALL);
    use DeclarePhysics(mesh = "carton_box_b.msh",       	     					   	reason = DYNOBJ_REASON_ALL);
    use DeclarePhysics(mesh = "carton_box_a.msh",       	     					  	reason = DYNOBJ_REASON_ALL);
    use DeclarePhysics(mesh = "carton_box_e.msh",       	         					reason = DYNOBJ_REASON_ALL);
    use DeclarePhysics(mesh = "office_paper_roll_a.msh",   								reason = DYNOBJ_REASON_ALL);
    use DeclarePhysics(mesh = "solar_panel_b_barrel.msh",                           	reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareDestroyablePhysics(mesh = "slums_no_entry_b.msh",                    	reason = DYNOBJ_REASON_ALL);
	

    //Bottles
    use DeclareChunk(mesh = "bottle_a.msh",                                         reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "bottle_a_open.msh",                                    reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "bottle_b.msh",                                         reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "bottle_b_open.msh",                                    reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "bottle_c.msh",                                         reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "bottle_c_open.msh",                                    reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "bottle_d.msh",                                         reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "bottle_d_open.msh",                                    reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "bottle_e.msh",                                         reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "bottle_e_open.msh",                                    reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "carafe_a.msh",                                    reason = DYNOBJ_REASON_ALL);

    // Physical - small.
    use DeclareChunk(mesh = "water_bottle_a.msh",                                   reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "sauce_a.msh",                                          reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "sauce_b.msh",                                          reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "hotdog_b.msh",                                         reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "ash_tray_a.msh",                                       reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "keyboard_a.msh",                                       reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "cup_cola_a.msh",                                       reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "juice_a.msh",                                          reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "shoe_b.msh",                                           reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "growler.msh",                                    		reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "cup_b.msh",                                    		reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);

    // Physical - medium.
    use DeclareChunk(mesh = "water_dispenser_bottle_a.msh",                         reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "bucket_a.msh",                   skin = "Dynamic",     reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "bucket_b.msh",                   skin = "Dynamic",     reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "paper_box.msh",                      skin = "Dynamic",                  reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "snack_box_b.msh",                                      reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
	use DeclareChunk(mesh = "fuel_can.msh",                                         reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
	

    // Destroyable - chemicals.
    use DeclareChunk(mesh = "chemicals_a.msh",                                      reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
    use DeclareChunk(mesh = "chemicals_b.msh",                                      reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
    use DeclareChunk(mesh = "chemicals_c.msh",                                      reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	
	// Special ones.
	use Declare(mesh = "int_lamp_b.msh",           skin = "Default_light_physics",  class = "JointDestroyableObject", reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
	
	use DeclareDestroyable(mesh = "ot_office_glass_panel_quarter.msh",              reason = DYNOBJ_REASON_ALL);
	use DeclareChunk(mesh = "museum_glass_wall_a.msh",     skin = "Default",              		    reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
	use DeclareChunk(mesh = "museum_catwalk_b.msh",      	skin = "Default",             		        reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
	use DeclareDestroyable(mesh = "wall_str_06_l0_dd_a_glass.msh",                  reason = DYNOBJ_REASON_ALL);
    use DeclareDestroyable(mesh = "ot_office_glass_panel_half.msh",                 reason = DYNOBJ_REASON_ALL);
    use DeclareDestroyable(mesh = "ot_office_glass_panel.msh",                      reason = DYNOBJ_REASON_ALL);
	use DeclareDestroyable(mesh = "ot_office_glass_panel_door.msh",                 reason = DYNOBJ_REASON_ALL);
    use DeclareDestroyable(mesh = "museum_glass_floor.msh",                         reason = DYNOBJ_REASON_ALL_NO_PLAYER);
	use DeclareDestroyable(mesh = "stadium_glass.msh",								reason = DYNOBJ_REASON_ALL_NO_PLAYER);
    use DeclareDestroyable(mesh = "museum_glass_floor_broken.msh",   		        reason = DYNOBJ_REASON_ALL_NO_PLAYER);
    use DeclareDestroyable(mesh = "museum_glass_floor_b_glass.msh",   		        reason = DYNOBJ_REASON_ALL_NO_PLAYER);
    use DeclareChunk(mesh = "ot_pillar_office.msh",                       	        reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "arena_pillar_a_dest.msh",                       	        reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "intr_office_wall_ab.msh",                              reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareDestroyable(mesh = "hangar_b_roof_b_glass_a.msh",                          reason = DYNOBJ_REASON_ALL_NO_PLAYER);
    use DeclareDestroyable(mesh = "hangar_b_roof_b_glass_b.msh",                          reason = DYNOBJ_REASON_ALL_NO_PLAYER);
    use DeclareDestroyable(mesh = "hangar_b_roof_b_glass_c.msh",                          reason = DYNOBJ_REASON_ALL_NO_PLAYER);
    use DeclareChunk(mesh = "office_hanging_lamp.msh",                              reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareChunk(mesh = "office_hanging_lamp_cone.msh",                         				    reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
    use DeclareDestroyablePhysics(mesh = "radio_intr_wall_03_c_n_a.msh",            reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
	use DeclareChunk(mesh = "intr_office_wall_aa.msh", 								reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
	use DeclareChunk(mesh = "magazine_stacks_a.msh", 								reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "files_a.msh", 											reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "files_b.msh", 											reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "files_c.msh", 											reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "files_d.msh", 											reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "files_e.msh", 											reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "files_f.msh", 											reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "files_g.msh", 											reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "files_h.msh", 											reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "files_i.msh", 											reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "files_j.msh", 											reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "files_k.msh", 											reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "files_l.msh", 											reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "newspaper_a.msh", 										reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "newspaper_b.msh", 										reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "newspaper_c.msh", 										reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "books_a.msh", 											reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "books_b.msh", 											reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "books_c.msh", 											reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "furniture_int_s_books_e.msh", 							reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "magazine_shelf_a.msh", 							 	reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "lamp_workbench_a.msh", 			skin = "Dynamic",	reason = DYNOBJ_REASON_ENV_SHOT_MELEE);

    use DeclareDestroyable(mesh = "slums_glass_a.msh",								reason = DYNOBJ_REASON_ALL);
	use DeclareDestroyable(mesh = "slums_glass_b.msh",								reason = DYNOBJ_REASON_ALL);



	//use DeclareChunk(mesh = "radio_decoration_a.msh", 							 	reason = DYNOBJ_REASON_ENV_SHOT_MELEE);

    use DeclareChunk(mesh = "lab_lamp.msh", 		skin = "on-yellow", 		 	reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	
    //MISCELANOUS DESTROYABLE OBJECTS 
    use DeclareDestroyablePhysics(mesh = "crate_a.msh",                             reason = DYNOBJ_REASON_ALL);
    use DeclareDestroyablePhysics(mesh = "crate_b.msh",                             reason = DYNOBJ_REASON_ALL);
    use DeclareDestroyablePhysics(mesh = "ot_planks_deco_a.msh",                    reason = DYNOBJ_REASON_ALL);
    use DeclareDestroyablePhysics(mesh = "comercial_stand_a.msh",                   reason = DYNOBJ_REASON_ALL);
    use DeclareDestroyablePhysics(mesh = "ot_barrier_c.msh",                        reason = DYNOBJ_REASON_ALL);
    use DeclareDestroyable(mesh = "roof_str_0303_ot_t_historic_barrier.msh", 		reason = DYNOBJ_REASON_ALL);
    use DeclareDestroyable(mesh = "roof_cut_0303_ot_t_historic_barrier.msh", 		reason = DYNOBJ_REASON_ALL);
    use DeclareDestroyable(mesh = "roof_cor_0303_ot_t_historic_barrier.msh", 		reason = DYNOBJ_REASON_ALL);
	//use DeclareDestroyablePhysics(mesh = "water_dispenser_a.msh", 					reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
	use DeclareDestroyable(mesh = "vending_machine_a.msh", skin = "Default", 		reason = DYNOBJ_REASON_ALL);
	use DeclareChunk(mesh = "monitor_a.msh", skin = "404", 			reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "monitor_a.msh", skin = "BSOD", 			reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "monitor_a.msh", skin = "copy", 			reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "monitor_a.msh", skin = "editor", 			reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "monitor_a.msh", skin = "login", 			reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "monitor_a.msh", skin = "no_signal", 		reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "monitor_a.msh", skin = "website", 		reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareChunk(mesh = "monitor_a.msh", skin = "default", 		reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareDestroyablePhysics(mesh = "monitor_a_hang.msh", skin = "404", 		reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
	use DeclareDestroyablePhysics(mesh = "monitor_a_hang.msh", skin = "BSOD", 		reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
	use DeclareDestroyablePhysics(mesh = "monitor_a_hang.msh", skin = "copy", 		reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
	use DeclareDestroyablePhysics(mesh = "monitor_a_hang.msh", skin = "editor", 	reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
	use DeclareDestroyablePhysics(mesh = "monitor_a_hang.msh", skin = "login", 		reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
	use DeclareDestroyablePhysics(mesh = "monitor_a_hang.msh", skin = "no_signal", 	reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
	use DeclareDestroyablePhysics(mesh = "monitor_a_hang.msh", skin = "website", 	reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
	use DeclareDestroyablePhysics(mesh = "monitor_a_hang.msh", skin = "default", 	reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
	use DeclareDestroyablePhysics(mesh = "monitor_a_hang.msh", skin = "museum_screen_jade_movie_a", 	reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
	use DeclareDestroyablePhysics(mesh = "int_fan_b.msh", 							reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
	use DeclareChunk(mesh = "int_fan_a.msh",                                  		reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
	use DeclareDestroyablePhysics(mesh = "tv_lcd_a_hang.msh", 						reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
	use DeclareDestroyablePhysics(mesh = "tv_lcd_a.msh", 							reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
	use DeclareDestroyablePhysics(mesh = "tv_led.msh", 								reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
	use DeclareDestroyablePhysics(mesh = "tv_led_hang.msh", 						reason = DYNOBJ_REASON_SHOT_MELEE_EXPLOSION_ENV);
	use DeclareDestroyablePhysics(mesh = "museum_olympiad_flag_c.msh", 	skin = "museum_screen_jade_movie_a",	reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
  use DeclareDestroyablePhysics(mesh = "notebook_a.msh", skin = "Dynamic", 	reason = DYNOBJ_REASON_ENV_SHOT_MELEE);


	//dodane przez bruneq'a
	use DeclarePhysics(mesh = "comercial_stand_b.msh", 								reason = DYNOBJ_REASON_ALL);
	use DeclarePhysics(mesh = "pistil_hotel_a.msh", 								reason = DYNOBJ_REASON_ALL);
	use DeclareChunk(mesh = "pottery_a.msh", 							reason = DYNOBJ_REASON_ALL);
	use DeclareChunk(mesh = "pottery_b.msh", 							reason = DYNOBJ_REASON_ALL);
	use DeclareChunk(mesh = "pottery_c.msh", 							reason = DYNOBJ_REASON_ALL);
	use DeclareChunk(mesh = "pottery_d.msh", 							reason = DYNOBJ_REASON_ALL);
	use DeclareChunk(mesh = "pottery_e.msh", 							reason = DYNOBJ_REASON_ALL);
	use DeclareChunk(mesh = "pottery_f.msh", 							reason = DYNOBJ_REASON_ALL);
	use DeclareChunk(mesh = "pottery_g.msh", 							reason = DYNOBJ_REASON_ALL);
	use DeclareChunk(mesh = "pottery_h.msh", 							reason = DYNOBJ_REASON_ALL);
	use DeclareChunk(mesh = "pottery_i.msh", 							reason = DYNOBJ_REASON_ALL);
	//use DeclarePhysics(mesh = "hookah_a.msh", 										reason = DYNOBJ_REASON_ALL);
	use DeclarePhysics(mesh = "kitchen_pot_a.msh", 			skin = "Dynamic",		reason = DYNOBJ_REASON_ALL);
	use DeclarePhysics(mesh = "kitchen_pot_b.msh", 			skin = "Dynamic",		reason = DYNOBJ_REASON_ALL);
	use DeclarePhysics(mesh = "kitchen_pot_c.msh", 			skin = "Dynamic",		reason = DYNOBJ_REASON_ALL);
	use DeclareDestroyablePhysics(mesh = "museum_wase_a.msh", 						reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareDestroyablePhysics(mesh = "museum_wase_b.msh", 						reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclareDestroyablePhysics(mesh = "museum_wase_c.msh", 						reason = DYNOBJ_REASON_ENV_SHOT_MELEE);
	use DeclarePhysics(mesh = "globe_a.msh", 										reason = DYNOBJ_REASON_ALL);
	use DeclarePhysics(mesh = "box_rtv_a.msh", 			skin = "Dynamic",			reason = DYNOBJ_REASON_ALL);
	use DeclarePhysics(mesh = "box_rtv_b.msh", 			skin = "Dynamic",			reason = DYNOBJ_REASON_ALL);
	use DeclarePhysics(mesh = "box_rtv_c.msh", 			skin = "Dynamic",			reason = DYNOBJ_REASON_ALL);
	use DeclarePhysics(mesh = "plastic_bottle_a.msh", 								reason = DYNOBJ_REASON_ALL);
//	use DeclareDestroyablePhysics(mesh = "chair_folding_a.msh", 					reason = DYNOBJ_REASON_ALL); 
//	use DeclareDestroyablePhysics(mesh = "cafe_table_a.msh", 						reason = DYNOBJ_REASON_ALL);
	use DeclareDestroyablePhysics(mesh = "chair_rattan_a.msh", 	skin = "Dynamic",		reason = DYNOBJ_REASON_ALL);
	use DeclareChunk(mesh = "furniture_chair_aluminium_a.msh", 	skin = "Dynamic",		reason = DYNOBJ_REASON_ALL);
	use DeclarePhysics(mesh = "hoker_a.msh", 										reason = DYNOBJ_REASON_ALL);
    //use DeclareChunk(mesh = "concrete_tube.msh",                              reason = DYNOBJ_REASON_ENVTARGET_AND_SHOT);
    use DeclareChunk(mesh = "concrete_tube.msh",                              reason = DYNOBJ_REASON_ENVTARGET_AND_SHOT | DYNOBJ_REASON_COLLISION_VEHICLE);

    

    // CRATES
    use DeclareDestroyablePhysics(mesh="crate_destro.msh",                          reason=DYNOBJ_REASON_ALL);
    use DeclareDestroyablePhysics(mesh="crate_destr_a.msh",                         reason=DYNOBJ_REASON_ALL);

    //ROOF
    use DeclareDestroyablePhysics(mesh="ot_roof_6x6_destr_b.msh",                   reason=DYNOBJ_REASON_ALL);
	use DeclareDestroyablePhysics(mesh="roof_sqr_0606_destr_b.msh",                   reason=DYNOBJ_REASON_ALL);
    use DeclareDestroyablePhysics(mesh="slums_block_roof_b.msh",                    reason=DYNOBJ_REASON_ALL);

    //SUNBLINDS
    use DeclareDestroyable(mesh="sunblind_b.msh",                            reason=DYNOBJ_REASON_ALL);
    use DeclareDestroyable(mesh="sunblind_c.msh",                            reason=DYNOBJ_REASON_ALL);


    //BALDACHAIN
    use DeclareDestroyable(mesh="ot_baldachain_fabric_a.msh",                reason=DYNOBJ_REASON_ALL);
    
    //WINDOWS
    use DeclareDestroyablePhysics(mesh="window_wood_dest_a.msh",                    reason=DYNOBJ_REASON_ALL);

    //DOORS
    use DeclareDestroyablePhysics(mesh="ot_door_dest_a.msh",                        reason=DYNOBJ_REASON_ALL);

    //WALLS
    use DeclareDestroyablePhysics(mesh="wall_dest_a.msh",                           reason=DYNOBJ_REASON_ALL);

    //VEHICLES

    use DeclareDestroyablePhysics(mesh = "fence_old_a.msh",                         reason = DYNOBJ_REASON_COLLISION_ALL | DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
    use DeclareDestroyablePhysics(mesh = "fence_old_cracked_a.msh",                 reason = DYNOBJ_REASON_COLLISION_ALL | DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
    use DeclareDestroyablePhysics(mesh = "fence_old_wired.msh",                     reason = DYNOBJ_REASON_COLLISION_ALL | DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
    use DeclareDestroyablePhysics(mesh = "fence_old_wired_damaged.msh",             reason = DYNOBJ_REASON_COLLISION_ALL | DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);


    //use DeclarePhysics(mesh = "park_trash_bin_a.msh",                               reason = DYNOBJ_REASON_ALL);
    //use DeclarePhysics(mesh = "box_plastic.msh",                                    reason = DYNOBJ_REASON_ALL);
    //use DeclarePhysics(mesh = "box_plastic_top.msh",                                reason = DYNOBJ_REASON_ALL);

    use DeclarePhysics(mesh = "road_sign_stop.msh",                                 reason = DYNOBJ_REASON_COLLISION_ALL | DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
    use DeclarePhysics(mesh = "road_sign_priority.msh",                             reason = DYNOBJ_REASON_COLLISION_ALL | DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
    use DeclarePhysics(mesh = "road_sign_noentry.msh",                              reason = DYNOBJ_REASON_COLLISION_ALL | DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
    use DeclarePhysics(mesh = "road_sign_noleftturn.msh",                           reason = DYNOBJ_REASON_COLLISION_ALL | DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
    use DeclarePhysics(mesh = "road_sign_norightturn.msh",                          reason = DYNOBJ_REASON_COLLISION_ALL | DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
    use DeclarePhysics(mesh = "road_sign_yield.msh",                                reason = DYNOBJ_REASON_COLLISION_ALL | DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
    use DeclarePhysics(mesh = "traffic_cone_a.msh",                                 reason = DYNOBJ_REASON_ALL );
    use DeclarePhysics(mesh = "wl_traffic_sign_a.msh",                              reason = DYNOBJ_REASON_COLLISION_VEHICLE | DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
    use DeclarePhysics(mesh = "wl_traffic_sign_b.msh",                              reason = DYNOBJ_REASON_COLLISION_VEHICLE | DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
    use DeclarePhysics(mesh = "wl_traffic_sign_c.msh",                              reason = DYNOBJ_REASON_COLLISION_VEHICLE | DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
    use DeclarePhysics(mesh = "wl_traffic_sign_d.msh",                              reason = DYNOBJ_REASON_COLLISION_VEHICLE | DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
    use DeclarePhysics(mesh = "wl_traffic_sign_e.msh",                              reason = DYNOBJ_REASON_COLLISION_VEHICLE | DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
    use DeclarePhysics(mesh = "wl_traffic_sign_f.msh",                              reason = DYNOBJ_REASON_COLLISION_VEHICLE | DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
    use DeclarePhysics(mesh = "wl_traffic_sign_g.msh",                              reason = DYNOBJ_REASON_COLLISION_VEHICLE | DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
    use DeclarePhysics(mesh = "wl_traffic_sign_h.msh",                              reason = DYNOBJ_REASON_COLLISION_VEHICLE | DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
    use DeclarePhysics(mesh = "wl_traffic_sign_i.msh",                              reason = DYNOBJ_REASON_COLLISION_VEHICLE | DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
    use DeclarePhysics(mesh = "wl_traffic_sign_j.msh",                              reason = DYNOBJ_REASON_COLLISION_VEHICLE | DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
    use DeclarePhysics(mesh = "wl_traffic_sign_k.msh",                              reason = DYNOBJ_REASON_COLLISION_VEHICLE | DYNOBJ_REASON_SHOT_MELEE_EXPLOSION);
    
    use containers();

    //use DeclareMeshSkins(mesh = "slums_door_a.msh", class = "DoorDI", mesh_replacement = "anim_slums_door_a.msh", reason = DYNOBJ_REASON_ALL);
}
