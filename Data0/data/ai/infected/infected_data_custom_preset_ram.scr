!include("ai_data.def")
!include("ai_timing.def")

// ram

///////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////// DATA ///////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

//###############
//#### DYING ####
//###############
//## die:is_standing:is_decapitated:direction
//###############

Data("die:standing:::::::", -2, "ram_decapitation_1", -1, 1)
Data("die:standing:::::::", -2, "ram_decapitation_2", -1, 1)
Data("die:standing:::::::", -2, "ram_decapitation_3", -1, 1)

//##############
//#### IDLE ####
//##############
//## idle:pose:idle_type:item_type:scare_level:is_idle_prepare:is_idle_finish
//##############

Data("idle:standing::stand:::", -2, "ram_idle", -1, 1)
Data("idle:standing::special:::", -2, "mz_exhausted_after_ram", -1, 1)

//################
//#### ATTACK ####
//################
//## attack:pose:item_type:attack_type:direction:attack_range:should_change_pose
//################

//Data("attack:standing::left_arm_strike:left::", -2, "ram_left", -1, 1)
Data("attack:standing::left_arm_strike:left::", -2, "ram_kick_left", -1, 1)
//Data("attack:standing::left_arm_strike:right::", -2, "ram_right", -1, 1)
Data("attack:standing::left_arm_strike:right::", -2, "ram_kick_right", -1, 1)
Data("attack:standing::left_arm_strike:forward::", -2, "ram_kick_front", -1, 1)
//Data("attack:standing::left_arm_strike:forward::", -2, "ram_front", -1, 1)
Data("attack:standing::left_arm_strike:backward::", -2, "ram_kick_back", -1, 1)
//Data("attack:standing::left_arm_strike:backward::", -2, "ram_backleft", -1, 1)
//Data("attack:standing::left_arm_strike:backward::", -2, "ram_backright", -1, 1)

//Data("attack:standing::right_arm_strike:left::", -2, "ram_left", -1, 1)
Data("attack:standing::right_arm_strike:left::", -2, "ram_kick_left", -1, 1)
//Data("attack:standing::right_arm_strike:right::", -2, "ram_right", -1, 1)
Data("attack:standing::right_arm_strike:right::", -2, "ram_kick_right", -1, 1)
Data("attack:standing::right_arm_strike:forward::", -2, "ram_kick_front", -1, 1)
//Data("attack:standing::right_arm_strike:forward::", -2, "ram_front", -1, 1)
Data("attack:standing::right_arm_strike:backward::", -2, "ram_kick_back", -1, 1)
//Data("attack:standing::right_arm_strike:backward::", -2, "ram_backleft", -1, 1)
//Data("attack:standing::right_arm_strike:backward::", -2, "ram_backright", -1, 1)


//#######################
//#### HIT REACTIONS ####
//#######################
//## hit_reaction:pose:hit_reaction:item_type:damage_type:attacker_pos:body_part:direction:severity
//#######################

Data("hit_reaction:standing:pain::all:rear:::", -2, "ram_hit_reaction_back01", -1, 1)
Data("hit_reaction:standing:pain::all:rear:::", -2, "ram_hit_reaction_back02", -1, 1)
Data("hit_reaction:standing:pain::all:rear:::", -2, "ram_hit_reaction_back03", -1, 1)
Data("hit_reaction:standing:pain::all:rear:::", -2, "ram_hit_reaction_back04", -1, 1)

Data("hit_reaction:standing:pain::all:::forward:", -2, "ram_hit_reaction_back01", -1, 1)
Data("hit_reaction:standing:pain::all:::forward:", -2, "ram_hit_reaction_back02", -1, 1)
Data("hit_reaction:standing:pain::all:::forward:", -2, "ram_hit_reaction_back03", -1, 1)
Data("hit_reaction:standing:pain::all:::forward:", -2, "ram_hit_reaction_back04", -1, 1)

Data("hit_reaction:standing:pain::all::::", -2, "ram_hit_reaction01", -1, 1)
Data("hit_reaction:standing:pain::all::::", -2, "ram_hit_reaction02", -1, 1)
Data("hit_reaction:standing:pain::all::::", -2, "ram_hit_reaction03", -1, 1)
Data("hit_reaction:standing:pain::all::::", -2, "ram_hit_reaction04", -1, 1)
Data("hit_reaction:standing:pain::all::::", -2, "ram_hit_reaction05", -1, 1)
Data("hit_reaction:standing:pain::all::::", -2, "ram_hit_reaction06", -1, 1)
Data("hit_reaction:standing:pain::all::::", -2, "ram_hit_reaction07", -1, 1)
Data("hit_reaction:standing:pain::all::::", -2, "ram_hit_reaction08", -1, 1)

//##############
//#### TURN ####
//##############
//## turn:pose:alarm_level:item_type:direction:angle
//##############

Data("turn:standing:::left:90", -2, "ram_rotate_90left", -1, 1)
Data("turn:standing:::right:90", -2, "ram_rotate_90right", -1, 1)

Data("turn:standing:::left:180", -2, "ram_rotate_180left", -1, 1)
Data("turn:standing:::right:180", -2, "ram_rotate_180right", -1, 1)

//#############################
//#### COLLISION REACTIONS ####
//#############################
//## collision_reaction:pose:direction:item_type:severity
//#######################

Data("collision_reaction:standing:::", -2, "ram_attack_wallhit02", -1, 1)
Data("collision_reaction:standing:::", -2, "ram_attack_wallhit03", -1, 1)
Data("collision_reaction:standing:::", -2, "ram_attack_wallhit04", -1, 1)

//##################
//#### MOVEMENT ####
//##################
//## movement:is_standing:movement_type:movement_direction:alarm_level:item_type:ram_type:stairs_climbing_state
//##################

Data("movement:standing:berserker_ram:forward:alarmed:::", -2, "ram_berserker_ram", -1, 1)
Data("movement:standing:berserker_ram_end:forward:alarmed:::", -2, "ram_berserker_stop", -1, 1)

Data("movement:standing:walk:forward::::", -2, "ram_walkforward_loop", -1, 1)
Data("movement:standing:trot:forward::::", -2, "ram_walkforward_loop", -1, 1)
Data("movement:standing:run:forward::::", -2, "ram_walkforward_loop", -1, 1)
Data("movement:standing:sprint:forward::::", -2, "ram_walkforward_loop", -1, 1)

//###############
//#### START ####
//###############
//## start:is_standing:alarm_level:item_type:movement_type:angle:direction
//##############

Data("start:standing:::berserker_ram:0::", -2, "ram_angel_start_front", -1, 1)
Data("start:standing:::berserker_ram:90:right:", -2, "ram_angel_start_right", -1, 1)
Data("start:standing:::berserker_ram:90:left:", -2, "ram_angel_start_left", -1, 1)
Data("start:standing:::berserker_ram:180:right:", -2, "ram_angel_start_backright", -1, 1)
Data("start:standing:::berserker_ram:180:left:", -2, "ram_angel_start_backleft", -1, 1)

Data("start:standing::::90:left:", -2, "ram_walkleft_start", -1, 1)
Data("start:standing::::90:right:", -2, "ram_walkright_start", -1, 1)
Data("start:standing::::0::", -2, "ram_walkforward_start", -1, 1)
Data("start:standing::::180:left:", -2, "ram_walkbackward_startleft", -1, 1)
Data("start:standing::::180:right:", -2, "ram_walkbackward_startright", -1, 1)

//##############
//#### STOP ####
//##############
//## stop:is_standing:alarm_level:item_type:movement_type:angle:direction:sudden
//##############

Data("stop:standing::::0::false:", -2, "ram_walkforward_stop", -1, 1)

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////// CURVES //////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

Curve(CURVE_HEALTH, "infected_health")
Curve(CURVE_MELEE_DAMAGE, "ram_melee_damage")

///////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////// PARAMETERS ////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////

ParamFloat("stamina_regeneration_rate", 0.05)
ParamFloat("head_health_influence", 1.0)
ParamFloat("left_arm_health_influence", 0.0)
ParamFloat("right_arm_health_influence", 0.0)
ParamFloat("left_leg_health_influence", 0.0)
ParamFloat("right_leg_health_influence", 0.0)
ParamFloat("torso_front_health_influence", 0.0)
ParamFloat("torso_back_health_influence", 1.0)
ParamFloat("min_time_btw_hit_reactions", 4)
ParamBool("directional_melee_attacks", 1)
ParamBool("can_fall", 0)
ParamBool("can_keep_distance_during_melee", 0)
ParamFloat("berserker_ram_dist", 13.0) //converted
ParamFloat("berserker_ram_min_dist", 3.0) //converted
ParamFloat("melee_range", 2.0) //converted
ParamFloat("melee_range_y", 1.0) //converted
ParamFloat("time_btw_ram_berserkers", 0.0)                  // time between possible occurance of ram berserker attacks
ParamFloat("move_time_before_berserker", 0.0)
ParamFloat("ram_physics_damage", 2.85)
ParamFloat("ram_damage_mul", 1.0)
ParamProb("taunt_prob", 0, 1)
ParamFloat("taunt_prob_on_target_change", 0.0)
ParamInt("zombie_type", 2)
ParamBool("can_fall_on_low_obstacles", 0)
ParamBool("always_react_on_bullet", 0)
ParamBool("always_react_on_kick", 0)
ParamBool("check_enemy_reachable", 1)
ParamFloat("ellipsoid_size_mul", 1.5)
ParamFloat("ram_turn_speed_limit_far", 60.0)
ParamFloat("ram_turn_speed_limit_close", 15.0)
ParamFloat("after_ram_wait_time", 2.0)
ParamFloat("ram_close_dist", 3.5) //converted
ParamBool("limb_cut_by_direct_hit", 0)
ParamFloat("berserker_ram_prob", 100.0)
ParamBool("can_strike_from_stand", 0)
ParamBool("can_attack_from_move", 0)
ParamFloat("experience_award", 0.0)
ParamFloat("health_mul", 4.0)
ParamFloat("counter_attack_prob_mul", 0.0)
ParamFloat("combo_prob_mul", 0.0)
ParamFloat("confusion_prob_mod", 0.0)
ParamFloat("time_for_clench_check", -1.0)
ParamFloat("physics_damage", 3.0)
ParamBool("fall_on_head_collision", 0)
ParamFloat("threat_level", 8)
ParamBool("enable_collisions_with_other_ai", 1)
ParamFloat("time_after_attack_before_loiter", 0.0)
ParamBool("navigate_through_generic_nav_mesh_connections", 0)
ParamBool("navigate_through_user_nav_mesh_connections", 0)
ParamBool("can_move_through_low_obstacles", 0)
ParamBool("can_move_through_high_obstacles", 0)
ParamFloat("max_connection_height_up", 0.0)
ParamFloat("max_connection_height_down", 0.0)
ParamFloat("max_connection_horiz_dist", 1.0)
ParamInt("consecutive_berserkers_min", 3) // min consecutive berserkers (one player)
ParamInt("consecutive_berserkers_max", 3) // max consecutive berserkers (4 players in coop)
ParamBool("has_glowing_eyes", 0)
ParamFloat("bullet_head_hit_damage_mult", 0.2)
ParamBool("can_attack_objects_from_move", 0)
